{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport findNodeHandle from \"../../findNodeHandle\";\nimport PointerEventManager from \"./PointerEventManager\";\nimport { State } from \"../../State\";\nimport { isPointerInBounds as _isPointerInBounds } from \"../utils\";\nimport { MouseButton } from \"../../handlers/gestureHandlerCommon\";\nimport KeyboardEventManager from \"./KeyboardEventManager\";\nimport WheelEventManager from \"./WheelEventManager\";\nexport var GestureHandlerWebDelegate = function () {\n  function GestureHandlerWebDelegate() {\n    _classCallCheck(this, GestureHandlerWebDelegate);\n    _defineProperty(this, \"isInitialized\", false);\n    _defineProperty(this, \"_view\", void 0);\n    _defineProperty(this, \"gestureHandler\", void 0);\n    _defineProperty(this, \"eventManagers\", []);\n    _defineProperty(this, \"defaultViewStyles\", {\n      userSelect: '',\n      touchAction: ''\n    });\n  }\n  return _createClass(GestureHandlerWebDelegate, [{\n    key: \"init\",\n    value: function init(viewRef, handler) {\n      var _this = this;\n      if (!viewRef) {\n        throw new Error(\"Cannot find HTML Element for handler \" + handler.handlerTag);\n      }\n      this.isInitialized = true;\n      this.gestureHandler = handler;\n      this.view = findNodeHandle(viewRef);\n      this.defaultViewStyles = {\n        userSelect: this.view.style.userSelect,\n        touchAction: this.view.style.touchAction\n      };\n      var config = handler.config;\n      this.setUserSelect(config.enabled);\n      this.setTouchAction(config.enabled);\n      this.setContextMenu(config.enabled);\n      this.eventManagers.push(new PointerEventManager(this.view));\n      this.eventManagers.push(new KeyboardEventManager(this.view));\n      this.eventManagers.push(new WheelEventManager(this.view));\n      this.eventManagers.forEach(function (manager) {\n        return _this.gestureHandler.attachEventManager(manager);\n      });\n    }\n  }, {\n    key: \"isPointerInBounds\",\n    value: function isPointerInBounds(_ref) {\n      var x = _ref.x,\n        y = _ref.y;\n      return _isPointerInBounds(this.view, {\n        x: x,\n        y: y\n      });\n    }\n  }, {\n    key: \"measureView\",\n    value: function measureView() {\n      var rect = this.view.getBoundingClientRect();\n      return {\n        pageX: rect.left,\n        pageY: rect.top,\n        width: rect.width,\n        height: rect.height\n      };\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.eventManagers.forEach(function (manager) {\n        return manager.resetManager();\n      });\n    }\n  }, {\n    key: \"tryResetCursor\",\n    value: function tryResetCursor() {\n      var config = this.gestureHandler.config;\n      if (config.activeCursor && config.activeCursor !== 'auto' && this.gestureHandler.state === State.ACTIVE) {\n        this.view.style.cursor = 'auto';\n      }\n    }\n  }, {\n    key: \"shouldDisableContextMenu\",\n    value: function shouldDisableContextMenu(config) {\n      return config.enableContextMenu === undefined && this.gestureHandler.isButtonInConfig(MouseButton.RIGHT) || config.enableContextMenu === false;\n    }\n  }, {\n    key: \"addContextMenuListeners\",\n    value: function addContextMenuListeners(config) {\n      if (this.shouldDisableContextMenu(config)) {\n        this.view.addEventListener('contextmenu', this.disableContextMenu);\n      } else if (config.enableContextMenu) {\n        this.view.addEventListener('contextmenu', this.enableContextMenu);\n      }\n    }\n  }, {\n    key: \"removeContextMenuListeners\",\n    value: function removeContextMenuListeners(config) {\n      if (this.shouldDisableContextMenu(config)) {\n        this.view.removeEventListener('contextmenu', this.disableContextMenu);\n      } else if (config.enableContextMenu) {\n        this.view.removeEventListener('contextmenu', this.enableContextMenu);\n      }\n    }\n  }, {\n    key: \"disableContextMenu\",\n    value: function disableContextMenu(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"enableContextMenu\",\n    value: function enableContextMenu(e) {\n      e.stopPropagation();\n    }\n  }, {\n    key: \"setUserSelect\",\n    value: function setUserSelect(isHandlerEnabled) {\n      var userSelect = this.gestureHandler.config.userSelect;\n      this.view.style['userSelect'] = isHandlerEnabled ? userSelect !== null && userSelect !== void 0 ? userSelect : 'none' : this.defaultViewStyles.userSelect;\n      this.view.style['webkitUserSelect'] = isHandlerEnabled ? userSelect !== null && userSelect !== void 0 ? userSelect : 'none' : this.defaultViewStyles.userSelect;\n    }\n  }, {\n    key: \"setTouchAction\",\n    value: function setTouchAction(isHandlerEnabled) {\n      var touchAction = this.gestureHandler.config.touchAction;\n      this.view.style['touchAction'] = isHandlerEnabled ? touchAction !== null && touchAction !== void 0 ? touchAction : 'none' : this.defaultViewStyles.touchAction;\n      this.view.style['WebkitTouchCallout'] = isHandlerEnabled ? touchAction !== null && touchAction !== void 0 ? touchAction : 'none' : this.defaultViewStyles.touchAction;\n    }\n  }, {\n    key: \"setContextMenu\",\n    value: function setContextMenu(isHandlerEnabled) {\n      var config = this.gestureHandler.config;\n      if (isHandlerEnabled) {\n        this.addContextMenuListeners(config);\n      } else {\n        this.removeContextMenuListeners(config);\n      }\n    }\n  }, {\n    key: \"onEnabledChange\",\n    value: function onEnabledChange(enabled) {\n      if (!this.isInitialized) {\n        return;\n      }\n      this.setUserSelect(enabled);\n      this.setTouchAction(enabled);\n      this.setContextMenu(enabled);\n      if (enabled) {\n        this.eventManagers.forEach(function (manager) {\n          manager.registerListeners();\n        });\n      } else {\n        this.eventManagers.forEach(function (manager) {\n          manager.unregisterListeners();\n        });\n      }\n    }\n  }, {\n    key: \"onBegin\",\n    value: function onBegin() {}\n  }, {\n    key: \"onActivate\",\n    value: function onActivate() {\n      var config = this.gestureHandler.config;\n      if ((!this.view.style.cursor || this.view.style.cursor === 'auto') && config.activeCursor) {\n        this.view.style.cursor = config.activeCursor;\n      }\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd() {\n      this.tryResetCursor();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.tryResetCursor();\n    }\n  }, {\n    key: \"onFail\",\n    value: function onFail() {\n      this.tryResetCursor();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(config) {\n      this.removeContextMenuListeners(config);\n      this.eventManagers.forEach(function (manager) {\n        manager.unregisterListeners();\n      });\n    }\n  }, {\n    key: \"view\",\n    get: function get() {\n      return this._view;\n    },\n    set: function set(value) {\n      this._view = value;\n    }\n  }]);\n}();","map":{"version":3,"names":["findNodeHandle","PointerEventManager","State","isPointerInBounds","MouseButton","KeyboardEventManager","WheelEventManager","GestureHandlerWebDelegate","_classCallCheck","_defineProperty","userSelect","touchAction","_createClass","key","value","init","viewRef","handler","_this","Error","handlerTag","isInitialized","gestureHandler","view","defaultViewStyles","style","config","setUserSelect","enabled","setTouchAction","setContextMenu","eventManagers","push","forEach","manager","attachEventManager","_ref","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","state","ACTIVE","cursor","shouldDisableContextMenu","enableContextMenu","undefined","isButtonInConfig","RIGHT","addContextMenuListeners","addEventListener","disableContextMenu","removeContextMenuListeners","removeEventListener","e","preventDefault","stopPropagation","isHandlerEnabled","onEnabledChange","registerListeners","unregisterListeners","onBegin","onActivate","onEnd","onCancel","onFail","destroy","get","_view","set"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\GestureHandlerWebDelegate.ts"],"sourcesContent":["import findNodeHandle from '../../findNodeHandle';\nimport type IGestureHandler from '../handlers/IGestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\nimport { Config } from '../interfaces';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport KeyboardEventManager from './KeyboardEventManager';\nimport WheelEventManager from './WheelEventManager';\n\ninterface DefaultViewStyles {\n  userSelect: string;\n  touchAction: string;\n}\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement, IGestureHandler>\n{\n  private isInitialized = false;\n  private _view!: HTMLElement;\n\n  private gestureHandler!: IGestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n  private defaultViewStyles: DefaultViewStyles = {\n    userSelect: '',\n    touchAction: '',\n  };\n\n  init(viewRef: number, handler: IGestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.handlerTag}`\n      );\n    }\n\n    this.isInitialized = true;\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.defaultViewStyles = {\n      userSelect: this.view.style.userSelect,\n      touchAction: this.view.style.touchAction,\n    };\n\n    const config = handler.config;\n\n    this.setUserSelect(config.enabled);\n    this.setTouchAction(config.enabled);\n    this.setContextMenu(config.enabled);\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new KeyboardEventManager(this.view));\n    this.eventManagers.push(new WheelEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.config;\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.state === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  private shouldDisableContextMenu(config: Config) {\n    return (\n      (config.enableContextMenu === undefined &&\n        this.gestureHandler.isButtonInConfig(MouseButton.RIGHT)) ||\n      config.enableContextMenu === false\n    );\n  }\n\n  private addContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.addEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.addEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private removeContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.removeEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.removeEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private disableContextMenu(this: void, e: MouseEvent): void {\n    e.preventDefault();\n  }\n\n  private enableContextMenu(this: void, e: MouseEvent): void {\n    e.stopPropagation();\n  }\n\n  private setUserSelect(isHandlerEnabled: boolean) {\n    const { userSelect } = this.gestureHandler.config;\n\n    this.view.style['userSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n\n    this.view.style['webkitUserSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n  }\n\n  private setTouchAction(isHandlerEnabled: boolean) {\n    const { touchAction } = this.gestureHandler.config;\n\n    this.view.style['touchAction'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n\n    // @ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n  }\n\n  private setContextMenu(isHandlerEnabled: boolean) {\n    const config = this.gestureHandler.config;\n\n    if (isHandlerEnabled) {\n      this.addContextMenuListeners(config);\n    } else {\n      this.removeContextMenuListeners(config);\n    }\n  }\n\n  onEnabledChange(enabled: boolean): void {\n    if (!this.isInitialized) {\n      return;\n    }\n\n    this.setUserSelect(enabled);\n    this.setTouchAction(enabled);\n    this.setContextMenu(enabled);\n\n    if (enabled) {\n      this.eventManagers.forEach((manager) => {\n        // It may look like managers will be registered twice when handler is mounted for the first time.\n        // However, `init` method is called AFTER `updateGestureConfig` - it means that delegate has not\n        // been initialized yet, so this code won't be executed.\n        //\n        // Also, because we use defined functions, not lambdas, they will not be registered multiple times.\n        manager.registerListeners();\n      });\n    } else {\n      this.eventManagers.forEach((manager) => {\n        manager.unregisterListeners();\n      });\n    }\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.config;\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n\n  public destroy(config: Config): void {\n    this.removeContextMenuListeners(config);\n\n    this.eventManagers.forEach((manager) => {\n      manager.unregisterListeners();\n    });\n  }\n\n  public get view() {\n    return this._view;\n  }\n  public set view(value: HTMLElement) {\n    this._view = value;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,cAAP;AAMA,OAAOC,mBAAP;AACA,SAASC,KAAT;AACA,SAASC,iBAAT,IAASA,kBAAT;AAGA,SAASC,WAAT;AACA,OAAOC,oBAAP;AACA,OAAOC,iBAAP;AAOA,WAAaC,yBAAN;EAEP,SAAAA,0BAAA;IAAAC,eAAA,OAAAD,yBAAA;IAAAE,eAAA,wBAC0B,KAD1B;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,wBAKmD,EALnD;IAAAA,eAAA,4BAMiD;MAC7CC,UAAU,EAAE,EADiC;MAE7CC,WAAW,EAAE;IAFgC,CANjD;EAAA;EAAA,OAAAC,YAAA,CAAAL,yBAAA;IAAAM,GAAA;IAAAC,KAAA,EAWE,SAAAC,IAAIA,CAACC,OAAD,EAAkBC,OAAlB,EAAkD;MAAA,IAAAC,KAAA;MACpD,IAAI,CAACF,OAAL,EAAc;QACZ,MAAM,IAAIG,KAAJ,2CACoCF,OAAO,CAACG,UAD5C,CAAN;MAGD;MAED,KAAKC,aAAL,GAAqB,IAArB;MAEA,KAAKC,cAAL,GAAsBL,OAAtB;MACA,KAAKM,IAAL,GAAYvB,cAAc,CAACgB,OAAD,CAA1B;MAEA,KAAKQ,iBAAL,GAAyB;QACvBd,UAAU,EAAE,KAAKa,IAAL,CAAUE,KAAV,CAAgBf,UADL;QAEvBC,WAAW,EAAE,KAAKY,IAAL,CAAUE,KAAV,CAAgBd;MAFN,CAAzB;MAKA,IAAMe,MAAM,GAAGT,OAAO,CAACS,MAAvB;MAEA,KAAKC,aAAL,CAAmBD,MAAM,CAACE,OAA1B;MACA,KAAKC,cAAL,CAAoBH,MAAM,CAACE,OAA3B;MACA,KAAKE,cAAL,CAAoBJ,MAAM,CAACE,OAA3B;MAEA,KAAKG,aAAL,CAAmBC,IAAnB,CAAwB,IAAI/B,mBAAJ,CAAwB,KAAKsB,IAA7B,CAAxB;MACA,KAAKQ,aAAL,CAAmBC,IAAnB,CAAwB,IAAI3B,oBAAJ,CAAyB,KAAKkB,IAA9B,CAAxB;MACA,KAAKQ,aAAL,CAAmBC,IAAnB,CAAwB,IAAI1B,iBAAJ,CAAsB,KAAKiB,IAA3B,CAAxB;MAEA,KAAKQ,aAAL,CAAmBE,OAAnB,CAA4B,UAAAC,OAAD;QAAA,OACzBhB,KAAA,CAAKI,cAAL,CAAoBa,kBAApB,CAAuCD,OAAvC,CADF;MAAA;IAGD;EAAA;IAAArB,GAAA;IAAAC,KAAA,EAED,SAAAX,iBAAiBA,CAAAiC,IAAA,EAA8C;MAAA,IAA3CC,CAAF,GAAAD,IAAA,CAAEC,CAAF;QAAKC,CAAA,GAAAF,IAAA,CAAAE,CAAA;MACrB,OAAOnC,kBAAiB,CAAC,KAAKoB,IAAN,EAAY;QAAEc,CAAF,EAAEA,CAAF;QAAKC,CAAA,EAAAA;MAAL,CAAZ,CAAxB;IACD;EAAA;IAAAzB,GAAA;IAAAC,KAAA,EAED,SAAAyB,WAAWA,CAAA,EAAkB;MAC3B,IAAMC,IAAI,GAAG,KAAKjB,IAAL,CAAUkB,qBAAV,EAAb;MAEA,OAAO;QACLC,KAAK,EAAEF,IAAI,CAACG,IADP;QAELC,KAAK,EAAEJ,IAAI,CAACK,GAFP;QAGLC,KAAK,EAAEN,IAAI,CAACM,KAHP;QAILC,MAAM,EAAEP,IAAI,CAACO;MAJR,CAAP;IAMD;EAAA;IAAAlC,GAAA;IAAAC,KAAA,EAED,SAAAkC,KAAKA,CAAA,EAAS;MACZ,KAAKjB,aAAL,CAAmBE,OAAnB,CAA4B,UAAAC,OAAD;QAAA,OACzBA,OAAO,CAACe,YAAR,EADF;MAAA;IAGD;EAAA;IAAApC,GAAA;IAAAC,KAAA,EAED,SAAAoC,cAAcA,CAAA,EAAG;MACf,IAAMxB,MAAM,GAAG,KAAKJ,cAAL,CAAoBI,MAAnC;MAEA,IACEA,MAAM,CAACyB,YAAP,IACAzB,MAAM,CAACyB,YAAP,KAAwB,MADxB,IAEA,KAAK7B,cAAL,CAAoB8B,KAApB,KAA8BlD,KAAK,CAACmD,MAHtC,EAIE;QACA,KAAK9B,IAAL,CAAUE,KAAV,CAAgB6B,MAAhB,GAAyB,MAAzB;MACD;IACF;EAAA;IAAAzC,GAAA;IAAAC,KAAA,EAEO,SAAAyC,wBAAwBA,CAAC7B,MAAD,EAAiB;MAC/C,OACGA,MAAM,CAAC8B,iBAAP,KAA6BC,SAA7B,IACC,KAAKnC,cAAL,CAAoBoC,gBAApB,CAAqCtD,WAAW,CAACuD,KAAjD,CADF,IAEAjC,MAAM,CAAC8B,iBAAP,KAA6B,KAH/B;IAKD;EAAA;IAAA3C,GAAA;IAAAC,KAAA,EAEO,SAAA8C,uBAAuBA,CAAClC,MAAD,EAAuB;MACpD,IAAI,KAAK6B,wBAAL,CAA8B7B,MAA9B,CAAJ,EAA2C;QACzC,KAAKH,IAAL,CAAUsC,gBAAV,CAA2B,aAA3B,EAA0C,KAAKC,kBAA/C;MACD,CAFD,MAEO,IAAIpC,MAAM,CAAC8B,iBAAX,EAA8B;QACnC,KAAKjC,IAAL,CAAUsC,gBAAV,CAA2B,aAA3B,EAA0C,KAAKL,iBAA/C;MACD;IACF;EAAA;IAAA3C,GAAA;IAAAC,KAAA,EAEO,SAAAiD,0BAA0BA,CAACrC,MAAD,EAAuB;MACvD,IAAI,KAAK6B,wBAAL,CAA8B7B,MAA9B,CAAJ,EAA2C;QACzC,KAAKH,IAAL,CAAUyC,mBAAV,CAA8B,aAA9B,EAA6C,KAAKF,kBAAlD;MACD,CAFD,MAEO,IAAIpC,MAAM,CAAC8B,iBAAX,EAA8B;QACnC,KAAKjC,IAAL,CAAUyC,mBAAV,CAA8B,aAA9B,EAA6C,KAAKR,iBAAlD;MACD;IACF;EAAA;IAAA3C,GAAA;IAAAC,KAAA,EAEO,SAAAgD,kBAAkBA,CAAaG,CAAb,EAAkC;MAC1DA,CAAC,CAACC,cAAF;IACD;EAAA;IAAArD,GAAA;IAAAC,KAAA,EAEO,SAAA0C,iBAAiBA,CAAaS,CAAb,EAAkC;MACzDA,CAAC,CAACE,eAAF;IACD;EAAA;IAAAtD,GAAA;IAAAC,KAAA,EAEO,SAAAa,aAAaA,CAACyC,gBAAD,EAA4B;MAC/C,IAAQ1D,UAAA,GAAe,KAAKY,cAAL,CAAoBI,MAA3C,CAAQhB,UAAA;MAER,KAAKa,IAAL,CAAUE,KAAV,CAAgB,YAAhB,IAAgC2C,gBAAgB,GAC3C1D,UAD2C,aAC3CA,UAD2C,cAC3CA,UAD2C,GAC7B,MAD6B,GAE5C,KAAKc,iBAAL,CAAuBd,UAF3B;MAIA,KAAKa,IAAL,CAAUE,KAAV,CAAgB,kBAAhB,IAAsC2C,gBAAgB,GACjD1D,UADiD,aACjDA,UADiD,cACjDA,UADiD,GACnC,MADmC,GAElD,KAAKc,iBAAL,CAAuBd,UAF3B;IAGD;EAAA;IAAAG,GAAA;IAAAC,KAAA,EAEO,SAAAe,cAAcA,CAACuC,gBAAD,EAA4B;MAChD,IAAQzD,WAAA,GAAgB,KAAKW,cAAL,CAAoBI,MAA5C,CAAQf,WAAA;MAER,KAAKY,IAAL,CAAUE,KAAV,CAAgB,aAAhB,IAAiC2C,gBAAgB,GAC5CzD,WAD4C,aAC5CA,WAD4C,cAC5CA,WAD4C,GAC7B,MAD6B,GAE7C,KAAKa,iBAAL,CAAuBb,WAF3B;MAKA,KAAKY,IAAL,CAAUE,KAAV,CAAgB,oBAAhB,IAAwC2C,gBAAgB,GACnDzD,WADmD,aACnDA,WADmD,cACnDA,WADmD,GACpC,MADoC,GAEpD,KAAKa,iBAAL,CAAuBb,WAF3B;IAGD;EAAA;IAAAE,GAAA;IAAAC,KAAA,EAEO,SAAAgB,cAAcA,CAACsC,gBAAD,EAA4B;MAChD,IAAM1C,MAAM,GAAG,KAAKJ,cAAL,CAAoBI,MAAnC;MAEA,IAAI0C,gBAAJ,EAAsB;QACpB,KAAKR,uBAAL,CAA6BlC,MAA7B;MACD,CAFD,MAEO;QACL,KAAKqC,0BAAL,CAAgCrC,MAAhC;MACD;IACF;EAAA;IAAAb,GAAA;IAAAC,KAAA,EAED,SAAAuD,eAAeA,CAACzC,OAAD,EAAyB;MACtC,IAAI,CAAC,KAAKP,aAAV,EAAyB;QACvB;MACD;MAED,KAAKM,aAAL,CAAmBC,OAAnB;MACA,KAAKC,cAAL,CAAoBD,OAApB;MACA,KAAKE,cAAL,CAAoBF,OAApB;MAEA,IAAIA,OAAJ,EAAa;QACX,KAAKG,aAAL,CAAmBE,OAAnB,CAA4B,UAAAC,OAAD,EAAa;UAMtCA,OAAO,CAACoC,iBAAR;QACD,CAPD;MAQD,CATD,MASO;QACL,KAAKvC,aAAL,CAAmBE,OAAnB,CAA4B,UAAAC,OAAD,EAAa;UACtCA,OAAO,CAACqC,mBAAR;QACD,CAFD;MAGD;IACF;EAAA;IAAA1D,GAAA;IAAAC,KAAA,EAED,SAAA0D,OAAOA,CAAA,EAAS,CAEf;EAAA;IAAA3D,GAAA;IAAAC,KAAA,EAED,SAAA2D,UAAUA,CAAA,EAAS;MACjB,IAAM/C,MAAM,GAAG,KAAKJ,cAAL,CAAoBI,MAAnC;MAEA,IACE,CAAC,CAAC,KAAKH,IAAL,CAAUE,KAAV,CAAgB6B,MAAjB,IAA2B,KAAK/B,IAAL,CAAUE,KAAV,CAAgB6B,MAAhB,KAA2B,MAAvD,KACA5B,MAAM,CAACyB,YAFT,EAGE;QACA,KAAK5B,IAAL,CAAUE,KAAV,CAAgB6B,MAAhB,GAAyB5B,MAAM,CAACyB,YAAhC;MACD;IACF;EAAA;IAAAtC,GAAA;IAAAC,KAAA,EAED,SAAA4D,KAAKA,CAAA,EAAS;MACZ,KAAKxB,cAAL;IACD;EAAA;IAAArC,GAAA;IAAAC,KAAA,EAED,SAAA6D,QAAQA,CAAA,EAAS;MACf,KAAKzB,cAAL;IACD;EAAA;IAAArC,GAAA;IAAAC,KAAA,EAED,SAAA8D,MAAMA,CAAA,EAAS;MACb,KAAK1B,cAAL;IACD;EAAA;IAAArC,GAAA;IAAAC,KAAA,EAEM,SAAA+D,OAAOA,CAACnD,MAAD,EAAuB;MACnC,KAAKqC,0BAAL,CAAgCrC,MAAhC;MAEA,KAAKK,aAAL,CAAmBE,OAAnB,CAA4B,UAAAC,OAAD,EAAa;QACtCA,OAAO,CAACqC,mBAAR;MACD,CAFD;IAGD;EAAA;IAAA1D,GAAA;IAAAiE,GAAA,EAEc,SAAAA,IAAA,EAAG;MAChB,OAAO,KAAKC,KAAZ;IACD;IAAAC,GAAA,EACc,SAAAA,IAAClE,KAAD,EAAqB;MAClC,KAAKiE,KAAL,GAAajE,KAAb;IACD;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}