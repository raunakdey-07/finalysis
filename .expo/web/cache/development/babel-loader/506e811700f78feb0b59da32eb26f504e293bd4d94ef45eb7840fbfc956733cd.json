{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Card, IconButton } from 'react-native-paper';\nimport Tooltip from 'react-native-walkthrough-tooltip';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScoreCard(_ref) {\n  var title = _ref.title,\n    value = _ref.value,\n    interpretation = _ref.interpretation,\n    tooltip = _ref.tooltip,\n    color = _ref.color;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    showTip = _React$useState2[0],\n    setShowTip = _React$useState2[1];\n  return _jsxs(Card, {\n    style: styles.card,\n    children: [_jsx(Card.Title, {\n      title: title,\n      titleStyle: {\n        color: color\n      },\n      right: function right() {\n        return _jsx(Tooltip, {\n          isVisible: showTip,\n          contentStyle: styles.tipContent,\n          content: _jsx(Text, {\n            style: styles.tipText,\n            children: tooltip\n          }),\n          placement: \"top\",\n          onClose: function onClose() {\n            return setShowTip(false);\n          },\n          children: _jsx(IconButton, {\n            icon: \"information\",\n            color: color,\n            onPress: function onPress() {\n              return setShowTip(true);\n            }\n          })\n        });\n      }\n    }), _jsxs(Card.Content, {\n      children: [_jsx(Text, {\n        style: [styles.value, {\n          color: color\n        }],\n        children: value\n      }), _jsx(Text, {\n        style: styles.interpret,\n        children: interpretation\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  card: {\n    marginBottom: 16,\n    backgroundColor: '#1f1f1f'\n  },\n  value: {\n    fontSize: 28,\n    fontWeight: 'bold'\n  },\n  interpret: {\n    fontSize: 14,\n    color: '#ccc',\n    marginTop: 4\n  },\n  tipContent: {\n    backgroundColor: '#333',\n    padding: 8,\n    borderRadius: 4\n  },\n  tipText: {\n    color: '#fff',\n    fontSize: 12\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","Card","IconButton","Tooltip","jsx","_jsx","jsxs","_jsxs","ScoreCard","_ref","title","value","interpretation","tooltip","color","_React$useState","useState","_React$useState2","_slicedToArray","showTip","setShowTip","style","styles","card","children","Title","titleStyle","right","isVisible","contentStyle","tipContent","content","tipText","placement","onClose","icon","onPress","Content","interpret","create","marginBottom","backgroundColor","fontSize","fontWeight","marginTop","padding","borderRadius"],"sources":["C:/Users/rauna/Project Finalysis/components/ScoreCard.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text }         from 'react-native';\r\nimport { Card, IconButton }         from 'react-native-paper';\r\nimport Tooltip                      from 'react-native-walkthrough-tooltip';\r\n\r\nexport default function ScoreCard({ title, value, interpretation, tooltip, color }) {\r\n  const [showTip, setShowTip] = React.useState(false);\r\n\r\n  return (\r\n    <Card style={styles.card}>\r\n      <Card.Title\r\n        title={title}\r\n        titleStyle={{ color }}\r\n        right={() => (\r\n          <Tooltip\r\n            isVisible={showTip}\r\n            contentStyle={styles.tipContent}\r\n            content={<Text style={styles.tipText}>{tooltip}</Text>}\r\n            placement=\"top\"\r\n            onClose={() => setShowTip(false)}\r\n          >\r\n            <IconButton icon=\"information\" color={color} onPress={() => setShowTip(true)} />\r\n          </Tooltip>\r\n        )}\r\n      />\r\n      <Card.Content>\r\n        <Text style={[styles.value, { color }]}>{value}</Text>\r\n        <Text style={styles.interpret}>{interpretation}</Text>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:      { marginBottom: 16, backgroundColor: '#1f1f1f' },\r\n  value:     { fontSize: 28, fontWeight: 'bold' },\r\n  interpret: { fontSize: 14, color: '#ccc', marginTop: 4 },\r\n  tipContent:{ backgroundColor: '#333', padding: 8, borderRadius: 4 },\r\n  tipText:   { color: '#fff', fontSize: 12 }\r\n});"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,IAAI,EAAEC,UAAU,QAAgB,oBAAoB;AAC7D,OAAOC,OAAO,MAA2B,kCAAkC;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE5E,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAmD;EAAA,IAAhDC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,cAAc,GAAAH,IAAA,CAAdG,cAAc;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IAAEC,KAAK,GAAAL,IAAA,CAALK,KAAK;EAC9E,IAAAC,eAAA,GAA8BjB,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA5CI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAE1B,OACEV,KAAA,CAACN,IAAI;IAACoB,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,GACvBnB,IAAA,CAACJ,IAAI,CAACwB,KAAK;MACTf,KAAK,EAAEA,KAAM;MACbgB,UAAU,EAAE;QAAEZ,KAAK,EAALA;MAAM,CAAE;MACtBa,KAAK,EAAE,SAAPA,KAAKA,CAAA;QAAA,OACHtB,IAAA,CAACF,OAAO;UACNyB,SAAS,EAAET,OAAQ;UACnBU,YAAY,EAAEP,MAAM,CAACQ,UAAW;UAChCC,OAAO,EAAE1B,IAAA,CAACL,IAAI;YAACqB,KAAK,EAAEC,MAAM,CAACU,OAAQ;YAAAR,QAAA,EAAEX;UAAO,CAAO,CAAE;UACvDoB,SAAS,EAAC,KAAK;UACfC,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQd,UAAU,CAAC,KAAK,CAAC;UAAA,CAAC;UAAAI,QAAA,EAEjCnB,IAAA,CAACH,UAAU;YAACiC,IAAI,EAAC,aAAa;YAACrB,KAAK,EAAEA,KAAM;YAACsB,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQhB,UAAU,CAAC,IAAI,CAAC;YAAA;UAAC,CAAE;QAAC,CACzE,CAAC;MAAA;IACV,CACH,CAAC,EACFb,KAAA,CAACN,IAAI,CAACoC,OAAO;MAAAb,QAAA,GACXnB,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAE,CAACC,MAAM,CAACX,KAAK,EAAE;UAAEG,KAAK,EAALA;QAAM,CAAC,CAAE;QAAAU,QAAA,EAAEb;MAAK,CAAO,CAAC,EACtDN,IAAA,CAACL,IAAI;QAACqB,KAAK,EAAEC,MAAM,CAACgB,SAAU;QAAAd,QAAA,EAAEZ;MAAc,CAAO,CAAC;IAAA,CAC1C,CAAC;EAAA,CACX,CAAC;AAEX;AAEA,IAAMU,MAAM,GAAGvB,UAAU,CAACwC,MAAM,CAAC;EAC/BhB,IAAI,EAAO;IAAEiB,YAAY,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAU,CAAC;EAC3D9B,KAAK,EAAM;IAAE+B,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAO,CAAC;EAC/CL,SAAS,EAAE;IAAEI,QAAQ,EAAE,EAAE;IAAE5B,KAAK,EAAE,MAAM;IAAE8B,SAAS,EAAE;EAAE,CAAC;EACxDd,UAAU,EAAC;IAAEW,eAAe,EAAE,MAAM;IAAEI,OAAO,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAE,CAAC;EACnEd,OAAO,EAAI;IAAElB,KAAK,EAAE,MAAM;IAAE4B,QAAQ,EAAE;EAAG;AAC3C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}