{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { tagMessage } from \"../../../utils\";\nimport { isRNSVGNode } from \"../../../web/utils\";\nexport var Wrap = forwardRef(function (_ref, ref) {\n  var children = _ref.children;\n  try {\n    var child = React.Children.only(children);\n    if (isRNSVGNode(child)) {\n      var clone = React.cloneElement(child, {\n        ref: ref\n      }, child.props.children);\n      return clone;\n    }\n    return React.createElement(\"div\", {\n      ref: ref,\n      style: {\n        display: 'contents'\n      }\n    }, child);\n  } catch (e) {\n    throw new Error(tagMessage(\"GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.\"));\n  }\n});\nexport var AnimatedWrap = Wrap;","map":{"version":3,"names":["React","forwardRef","tagMessage","isRNSVGNode","Wrap","_ref","ref","children","child","Children","only","clone","cloneElement","props","createElement","style","display","e","Error","AnimatedWrap"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\GestureDetector\\Wrap.web.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport type { LegacyRef, PropsWithChildren } from 'react';\nimport { tagMessage } from '../../../utils';\nimport { isRNSVGNode } from '../../../web/utils';\n\nexport const Wrap = forwardRef<HTMLDivElement, PropsWithChildren<{}>>(\n  ({ children }, ref) => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(children);\n\n      if (isRNSVGNode(child)) {\n        const clone = React.cloneElement(\n          child,\n          { ref },\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          child.props.children\n        );\n\n        return clone;\n      }\n\n      return (\n        <div\n          ref={ref as LegacyRef<HTMLDivElement>}\n          style={{ display: 'contents' }}>\n          {child}\n        </div>\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n);\n\n// On web we never take a path with Reanimated,\n// therefore we can simply export Wrap\nexport const AnimatedWrap = Wrap;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,UAAT;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,IAAI,GAAGH,UAAU,CAC5B,UAAAI,IAAA,EAAeC,GAAf,EAAuB;EAAA,IAApBC,QAAA,GAAAF,IAAA,CAAAE,QAAA;EACD,IAAI;IAEF,IAAMC,KAAU,GAAGR,KAAK,CAACS,QAAN,CAAeC,IAAf,CAAoBH,QAApB,CAAnB;IAEA,IAAIJ,WAAW,CAACK,KAAD,CAAf,EAAwB;MACtB,IAAMG,KAAK,GAAGX,KAAK,CAACY,YAAN,CACZJ,KADY,EAEZ;QAAEF,GAAA,EAAAA;MAAF,CAFY,EAIZE,KAAK,CAACK,KAAN,CAAYN,QAJA,CAAd;MAOA,OAAOI,KAAP;IACD;IAED,OACEX,KAAA,CAAAc,aAAA;MACER,GAAG,EAAEA,GADP;MAEES,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAX;IAFT,GAGGR,KAHH,CADF;EAOD,CAtBD,CAsBE,OAAOS,CAAP,EAAU;IACV,MAAM,IAAIC,KAAJ,CACJhB,UAAU,6KADN,CAAN;EAKD;AACF,CA/B2B,CAAvB;AAoCP,OAAO,IAAMiB,YAAY,GAAGf,IAArB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}