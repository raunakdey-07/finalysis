{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from \"../../State\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nimport ScaleGestureDetector from \"../detectors/ScaleGestureDetector\";\nvar PinchGestureHandler = function (_GestureHandler) {\n  function PinchGestureHandler() {\n    var _this;\n    _classCallCheck(this, PinchGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, PinchGestureHandler, [].concat(args));\n    _defineProperty(_this, \"scale\", 1);\n    _defineProperty(_this, \"velocity\", 0);\n    _defineProperty(_this, \"startingSpan\", 0);\n    _defineProperty(_this, \"spanSlop\", DEFAULT_TOUCH_SLOP);\n    _defineProperty(_this, \"scaleDetectorListener\", {\n      onScaleBegin: function onScaleBegin(detector) {\n        _this.startingSpan = detector.currentSpan;\n        return true;\n      },\n      onScale: function onScale(detector) {\n        var prevScaleFactor = _this.scale;\n        _this.scale *= detector.calculateScaleFactor(_this.tracker.trackedPointersCount);\n        var delta = detector.timeDelta;\n        if (delta > 0) {\n          _this.velocity = (_this.scale - prevScaleFactor) / delta;\n        }\n        if (Math.abs(_this.startingSpan - detector.currentSpan) >= _this.spanSlop && _this.state === State.BEGAN) {\n          _this.activate();\n        }\n        return true;\n      },\n      onScaleEnd: function onScaleEnd(_detector) {}\n    });\n    _defineProperty(_this, \"scaleGestureDetector\", new ScaleGestureDetector(_this.scaleDetectorListener));\n    return _this;\n  }\n  _inherits(PinchGestureHandler, _GestureHandler);\n  return _createClass(PinchGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _superPropGet(PinchGestureHandler, \"init\", this, 3)([ref, propsRef]);\n      this.shouldCancelWhenOutside = false;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {\n        focalX: this.scaleGestureDetector.focusX,\n        focalY: this.scaleGestureDetector.focusY,\n        velocity: this.velocity,\n        scale: this.scale\n      };\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      _superPropGet(PinchGestureHandler, \"onPointerDown\", this, 3)([event]);\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _superPropGet(PinchGestureHandler, \"onPointerAdd\", this, 3)([event]);\n      this.tryBegin();\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _superPropGet(PinchGestureHandler, \"onPointerUp\", this, 3)([event]);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.state !== State.ACTIVE) {\n        return;\n      }\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      if (this.state === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _superPropGet(PinchGestureHandler, \"onPointerRemove\", this, 3)([event]);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n        this.end();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      if (this.tracker.trackedPointersCount < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _superPropGet(PinchGestureHandler, \"onPointerMove\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.tracker.trackedPointersCount < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _superPropGet(PinchGestureHandler, \"onPointerOutOfBounds\", this, 3)([event]);\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin() {\n      if (this.state !== State.UNDETERMINED) {\n        return;\n      }\n      this.resetProgress();\n      this.begin();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      if (this.state !== State.ACTIVE) {\n        this.resetProgress();\n      }\n      _superPropGet(PinchGestureHandler, \"activate\", this, 3)([force]);\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      this.resetProgress();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      if (this.state === State.ACTIVE) {\n        return;\n      }\n      this.velocity = 0;\n      this.scale = 1;\n    }\n  }]);\n}(GestureHandler);\nexport { PinchGestureHandler as default };","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","ScaleGestureDetector","PinchGestureHandler","_GestureHandler","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","onScaleBegin","detector","startingSpan","currentSpan","onScale","prevScaleFactor","scale","calculateScaleFactor","tracker","trackedPointersCount","delta","timeDelta","velocity","Math","abs","spanSlop","state","BEGAN","activate","onScaleEnd","_detector","scaleDetectorListener","_inherits","_createClass","key","value","init","ref","propsRef","_superPropGet","shouldCancelWhenOutside","transformNativeEvent","focalX","scaleGestureDetector","focusX","focalY","focusY","onPointerDown","event","addToTracker","tryToSendTouchEvent","onPointerAdd","tryBegin","onTouchEvent","onPointerUp","removeFromTracker","pointerId","ACTIVE","end","fail","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","UNDETERMINED","resetProgress","begin","force","onReset","default"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\PinchGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.currentSpan;\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.calculateScaleFactor(\n        this.tracker.trackedPointersCount\n      );\n\n      const delta = detector.timeDelta;\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.currentSpan) >= this.spanSlop &&\n        this.state === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = false;\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.focusX,\n      focalY: this.scaleGestureDetector.focusY,\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.state !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.state === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  private tryBegin(): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.state !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.state === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}