{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from \"../../State\";\nimport { TouchEventType, EventTypes } from \"../interfaces\";\nimport GestureHandlerOrchestrator from \"../tools/GestureHandlerOrchestrator\";\nimport InteractionManager from \"../tools/InteractionManager\";\nimport PointerTracker from \"../tools/PointerTracker\";\nimport { MouseButton } from \"../../handlers/gestureHandlerCommon\";\nimport { PointerType } from \"../../PointerType\";\nvar GestureHandler = function () {\n  function GestureHandler(delegate) {\n    var _this = this;\n    _classCallCheck(this, GestureHandler);\n    _defineProperty(this, \"lastSentState\", null);\n    _defineProperty(this, \"_state\", State.UNDETERMINED);\n    _defineProperty(this, \"_shouldCancelWhenOutside\", false);\n    _defineProperty(this, \"hasCustomActivationCriteria\", false);\n    _defineProperty(this, \"_enabled\", false);\n    _defineProperty(this, \"viewRef\", void 0);\n    _defineProperty(this, \"propsRef\", void 0);\n    _defineProperty(this, \"_handlerTag\", void 0);\n    _defineProperty(this, \"_config\", {\n      enabled: false\n    });\n    _defineProperty(this, \"_tracker\", new PointerTracker());\n    _defineProperty(this, \"_activationIndex\", 0);\n    _defineProperty(this, \"_awaiting\", false);\n    _defineProperty(this, \"_active\", false);\n    _defineProperty(this, \"_shouldResetProgress\", false);\n    _defineProperty(this, \"_pointerType\", PointerType.MOUSE);\n    _defineProperty(this, \"_delegate\", void 0);\n    _defineProperty(this, \"sendEvent\", function (newState, oldState) {\n      var _this$propsRef$curren = _this.propsRef.current,\n        onGestureHandlerEvent = _this$propsRef$curren.onGestureHandlerEvent,\n        onGestureHandlerStateChange = _this$propsRef$curren.onGestureHandlerStateChange;\n      var resultEvent = _this.transformEventData(newState, oldState);\n      if (_this.lastSentState !== newState) {\n        _this.lastSentState = newState;\n        invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n      }\n      if (_this.state === State.ACTIVE) {\n        resultEvent.nativeEvent.oldState = undefined;\n        invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n      }\n    });\n    this._delegate = delegate;\n  }\n  return _createClass(GestureHandler, [{\n    key: \"init\",\n    value: function init(viewRef, propsRef) {\n      this.propsRef = propsRef;\n      this.viewRef = viewRef;\n      this.state = State.UNDETERMINED;\n      this.delegate.init(viewRef, this);\n    }\n  }, {\n    key: \"attachEventManager\",\n    value: function attachEventManager(manager) {\n      manager.setOnPointerDown(this.onPointerDown.bind(this));\n      manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n      manager.setOnPointerUp(this.onPointerUp.bind(this));\n      manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n      manager.setOnPointerMove(this.onPointerMove.bind(this));\n      manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n      manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n      manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n      manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n      manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n      manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n      manager.setOnWheel(this.onWheel.bind(this));\n      manager.registerListeners();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {}\n  }, {\n    key: \"onReset\",\n    value: function onReset() {}\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {}\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.tracker.resetTracker();\n      this.onReset();\n      this.resetProgress();\n      this.delegate.reset();\n      this.state = State.UNDETERMINED;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState, sendIfDisabled) {\n      if (this.state === newState) {\n        return;\n      }\n      var oldState = this.state;\n      this.state = newState;\n      if (this.tracker.trackedPointersCount > 0 && this.config.needsPointerData && this.isFinished()) {\n        this.cancelTouches();\n      }\n      GestureHandlerOrchestrator.instance.onHandlerStateChange(this, newState, oldState, sendIfDisabled);\n      this.onStateChange(newState, oldState);\n      if (!this.enabled && this.isFinished()) {\n        this.state = State.UNDETERMINED;\n      }\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(_newState, _oldState) {}\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      if (!this.checkHitSlop()) {\n        return;\n      }\n      if (this.state === State.UNDETERMINED) {\n        this.moveToState(State.BEGAN);\n      }\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(sendIfDisabled) {\n      if (this.state === State.ACTIVE || this.state === State.BEGAN) {\n        this.delegate.onFail();\n        this.moveToState(State.FAILED, sendIfDisabled);\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(sendIfDisabled) {\n      if (this.state === State.ACTIVE || this.state === State.UNDETERMINED || this.state === State.BEGAN) {\n        this.onCancel();\n        this.delegate.onCancel();\n        this.moveToState(State.CANCELLED, sendIfDisabled);\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if ((this.config.manualActivation !== true || force) && (this.state === State.UNDETERMINED || this.state === State.BEGAN)) {\n        this.delegate.onActivate();\n        this.moveToState(State.ACTIVE);\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n        this.delegate.onEnd();\n        this.moveToState(State.END);\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"getShouldResetProgress\",\n    value: function getShouldResetProgress() {\n      return this.shouldResetProgress;\n    }\n  }, {\n    key: \"setShouldResetProgress\",\n    value: function setShouldResetProgress(value) {\n      this.shouldResetProgress = value;\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.instance.shouldWaitForHandlerFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRequireToWaitForFailure\",\n    value: function shouldRequireToWaitForFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.instance.shouldRequireHandlerToWaitForFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler) {\n      if (handler === this) {\n        return true;\n      }\n      return InteractionManager.instance.shouldRecognizeSimultaneously(this, handler);\n    }\n  }, {\n    key: \"shouldBeCancelledByOther\",\n    value: function shouldBeCancelledByOther(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.instance.shouldHandlerBeCancelledBy(this, handler);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      GestureHandlerOrchestrator.instance.recordHandlerIfNotPresent(this);\n      this.pointerType = event.pointerType;\n      if (this.pointerType === PointerType.TOUCH) {\n        GestureHandlerOrchestrator.instance.cancelMouseAndPenGestures(this);\n      }\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tryToSendMoveEvent(false, event);\n    }\n  }, {\n    key: \"onPointerLeave\",\n    value: function onPointerLeave(event) {\n      if (this.shouldCancelWhenOutside) {\n        switch (this.state) {\n          case State.ACTIVE:\n            this.cancel();\n            break;\n          case State.BEGAN:\n            this.fail();\n            break;\n        }\n        return;\n      }\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerEnter\",\n    value: function onPointerEnter(event) {\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      this.tryToSendTouchEvent(event);\n      this.cancel();\n      this.reset();\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.tryToSendMoveEvent(true, event);\n    }\n  }, {\n    key: \"onPointerMoveOver\",\n    value: function onPointerMoveOver(_event) {}\n  }, {\n    key: \"onPointerMoveOut\",\n    value: function onPointerMoveOut(_event) {}\n  }, {\n    key: \"onWheel\",\n    value: function onWheel(_event) {}\n  }, {\n    key: \"tryToSendMoveEvent\",\n    value: function tryToSendMoveEvent(out, event) {\n      if (out && this.shouldCancelWhenOutside || !this.enabled) {\n        return;\n      }\n      if (this.active) {\n        this.sendEvent(this.state, this.state);\n      }\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"tryToSendTouchEvent\",\n    value: function tryToSendTouchEvent(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"sendTouchEvent\",\n    value: function sendTouchEvent(event) {\n      if (!this.enabled) {\n        return;\n      }\n      var onGestureHandlerEvent = this.propsRef.current.onGestureHandlerEvent;\n      var touchEvent = this.transformTouchEvent(event);\n      if (touchEvent) {\n        invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n      }\n    }\n  }, {\n    key: \"transformEventData\",\n    value: function transformEventData(newState, oldState) {\n      return {\n        nativeEvent: _objectSpread(_objectSpread({\n          numberOfPointers: this.tracker.trackedPointersCount,\n          state: newState,\n          pointerInside: this.delegate.isPointerInBounds(this.tracker.getAbsoluteCoordsAverage())\n        }, this.transformNativeEvent()), {}, {\n          handlerTag: this.handlerTag,\n          target: this.viewRef,\n          oldState: newState !== oldState ? oldState : undefined,\n          pointerType: this.pointerType\n        }),\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"transformTouchEvent\",\n    value: function transformTouchEvent(event) {\n      var _this2 = this;\n      var rect = this.delegate.measureView();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.trackedPointers;\n      if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this2.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y\n        });\n      });\n      if (event.eventType !== EventTypes.CANCEL) {\n        changed.push({\n          id: this.tracker.getMappedTouchEventId(event.pointerId),\n          x: event.x - rect.pageX,\n          y: event.y - rect.pageY,\n          absoluteX: event.x,\n          absoluteY: event.y\n        });\n      } else {\n        trackerData.forEach(function (element, key) {\n          var id = _this2.tracker.getMappedTouchEventId(key);\n          changed.push({\n            id: id,\n            x: element.abosoluteCoords.x - rect.pageX,\n            y: element.abosoluteCoords.y - rect.pageY,\n            absoluteX: element.abosoluteCoords.x,\n            absoluteY: element.abosoluteCoords.y\n          });\n        });\n      }\n      var eventType = TouchEventType.UNDETERMINED;\n      switch (event.eventType) {\n        case EventTypes.DOWN:\n        case EventTypes.ADDITIONAL_POINTER_DOWN:\n          eventType = TouchEventType.DOWN;\n          break;\n        case EventTypes.UP:\n        case EventTypes.ADDITIONAL_POINTER_UP:\n          eventType = TouchEventType.UP;\n          break;\n        case EventTypes.MOVE:\n          eventType = TouchEventType.MOVE;\n          break;\n        case EventTypes.CANCEL:\n          eventType = TouchEventType.CANCELLED;\n          break;\n      }\n      var numberOfTouches = all.length;\n      if (event.eventType === EventTypes.UP || event.eventType === EventTypes.ADDITIONAL_POINTER_UP) {\n        --numberOfTouches;\n      }\n      return {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.state,\n          eventType: eventType,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: numberOfTouches,\n          pointerType: this.pointerType\n        },\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"cancelTouches\",\n    value: function cancelTouches() {\n      var _this3 = this;\n      var rect = this.delegate.measureView();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.trackedPointers;\n      if (trackerData.size === 0) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this3.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y\n        });\n        changed.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y\n        });\n      });\n      var cancelEvent = {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.state,\n          eventType: TouchEventType.CANCELLED,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: all.length,\n          pointerType: this.pointerType\n        },\n        timeStamp: Date.now()\n      };\n      var onGestureHandlerEvent = this.propsRef.current.onGestureHandlerEvent;\n      invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      var lastCoords = this.tracker.getAbsoluteCoordsAverage();\n      var lastRelativeCoords = this.tracker.getRelativeCoordsAverage();\n      return {\n        x: lastRelativeCoords.x,\n        y: lastRelativeCoords.y,\n        absoluteX: lastCoords.x,\n        absoluteY: lastCoords.y\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      this._config = _objectSpread({\n        enabled: enabled\n      }, props);\n      this.enabled = enabled;\n      this.delegate.onEnabledChange(enabled);\n      if (this.config.shouldCancelWhenOutside !== undefined) {\n        this.shouldCancelWhenOutside = this.config.shouldCancelWhenOutside;\n      }\n      this.validateHitSlops();\n      if (this.enabled) {\n        return;\n      }\n      switch (this.state) {\n        case State.ACTIVE:\n          this.fail(true);\n          break;\n        case State.UNDETERMINED:\n          GestureHandlerOrchestrator.instance.removeHandlerFromOrchestrator(this);\n          break;\n        default:\n          this.cancel(true);\n          break;\n      }\n    }\n  }, {\n    key: \"checkCustomActivationCriteria\",\n    value: function checkCustomActivationCriteria(criterias) {\n      for (var key in this.config) {\n        if (criterias.indexOf(key) >= 0) {\n          this.hasCustomActivationCriteria = true;\n        }\n      }\n    }\n  }, {\n    key: \"validateHitSlops\",\n    value: function validateHitSlops() {\n      if (!this.config.hitSlop) {\n        return;\n      }\n      if (this.config.hitSlop.left !== undefined && this.config.hitSlop.right !== undefined && this.config.hitSlop.width !== undefined) {\n        throw new Error('HitSlop Error: Cannot define left, right and width at the same time');\n      }\n      if (this.config.hitSlop.width !== undefined && this.config.hitSlop.left === undefined && this.config.hitSlop.right === undefined) {\n        throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top !== undefined && this.config.hitSlop.bottom !== undefined) {\n        throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top === undefined && this.config.hitSlop.bottom === undefined) {\n        throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');\n      }\n    }\n  }, {\n    key: \"checkHitSlop\",\n    value: function checkHitSlop() {\n      if (!this.config.hitSlop) {\n        return true;\n      }\n      var _this$delegate$measur = this.delegate.measureView(),\n        width = _this$delegate$measur.width,\n        height = _this$delegate$measur.height;\n      var left = 0;\n      var top = 0;\n      var right = width;\n      var bottom = height;\n      if (this.config.hitSlop.horizontal !== undefined) {\n        left -= this.config.hitSlop.horizontal;\n        right += this.config.hitSlop.horizontal;\n      }\n      if (this.config.hitSlop.vertical !== undefined) {\n        top -= this.config.hitSlop.vertical;\n        bottom += this.config.hitSlop.vertical;\n      }\n      if (this.config.hitSlop.left !== undefined) {\n        left = -this.config.hitSlop.left;\n      }\n      if (this.config.hitSlop.right !== undefined) {\n        right = width + this.config.hitSlop.right;\n      }\n      if (this.config.hitSlop.top !== undefined) {\n        top = -this.config.hitSlop.top;\n      }\n      if (this.config.hitSlop.bottom !== undefined) {\n        bottom = width + this.config.hitSlop.bottom;\n      }\n      if (this.config.hitSlop.width !== undefined) {\n        if (this.config.hitSlop.left !== undefined) {\n          right = left + this.config.hitSlop.width;\n        } else if (this.config.hitSlop.right !== undefined) {\n          left = right - this.config.hitSlop.width;\n        }\n      }\n      if (this.config.hitSlop.height !== undefined) {\n        if (this.config.hitSlop.top !== undefined) {\n          bottom = top + this.config.hitSlop.height;\n        } else if (this.config.hitSlop.bottom !== undefined) {\n          top = bottom - this.config.hitSlop.height;\n        }\n      }\n      var rect = this.delegate.measureView();\n      var _this$tracker$getLast = this.tracker.getLastAbsoluteCoords(),\n        x = _this$tracker$getLast.x,\n        y = _this$tracker$getLast.y;\n      var offsetX = x - rect.pageX;\n      var offsetY = y - rect.pageY;\n      return offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom;\n    }\n  }, {\n    key: \"isButtonInConfig\",\n    value: function isButtonInConfig(mouseButton) {\n      return !mouseButton || !this.config.mouseButton && mouseButton === MouseButton.LEFT || this.config.mouseButton && mouseButton & this.config.mouseButton;\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {}\n  }, {\n    key: \"onDestroy\",\n    value: function onDestroy() {\n      this.delegate.destroy(this.config);\n    }\n  }, {\n    key: \"handlerTag\",\n    get: function get() {\n      return this._handlerTag;\n    },\n    set: function set(value) {\n      this._handlerTag = value;\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      return this._config;\n    }\n  }, {\n    key: \"delegate\",\n    get: function get() {\n      return this._delegate;\n    }\n  }, {\n    key: \"tracker\",\n    get: function get() {\n      return this._tracker;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this._state;\n    },\n    set: function set(value) {\n      this._state = value;\n    }\n  }, {\n    key: \"shouldCancelWhenOutside\",\n    get: function get() {\n      return this._shouldCancelWhenOutside;\n    },\n    set: function set(value) {\n      this._shouldCancelWhenOutside = value;\n    }\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this._enabled;\n    },\n    set: function set(value) {\n      this._enabled = value;\n    }\n  }, {\n    key: \"pointerType\",\n    get: function get() {\n      return this._pointerType;\n    },\n    set: function set(value) {\n      this._pointerType = value;\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    },\n    set: function set(value) {\n      this._active = value;\n    }\n  }, {\n    key: \"awaiting\",\n    get: function get() {\n      return this._awaiting;\n    },\n    set: function set(value) {\n      this._awaiting = value;\n    }\n  }, {\n    key: \"activationIndex\",\n    get: function get() {\n      return this._activationIndex;\n    },\n    set: function set(value) {\n      this._activationIndex = value;\n    }\n  }, {\n    key: \"shouldResetProgress\",\n    get: function get() {\n      return this._shouldResetProgress;\n    },\n    set: function set(value) {\n      this._shouldResetProgress = value;\n    }\n  }, {\n    key: \"getTrackedPointersID\",\n    value: function getTrackedPointersID() {\n      return this.tracker.trackedPointersIDs;\n    }\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return this.state === State.END || this.state === State.FAILED || this.state === State.CANCELLED;\n    }\n  }]);\n}();\nexport { GestureHandler as default };\nfunction invokeNullableMethod(method, event) {\n  if (!method) {\n    return;\n  }\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    var handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n  var argMapping = method.__nodeConfig.argMapping;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n  for (var _ref2 of argMapping.entries()) {\n    var _ref3 = _slicedToArray(_ref2, 2);\n    var index = _ref3[0];\n    var _ref3$ = _slicedToArray(_ref3[1], 2);\n    var key = _ref3$[0];\n    var value = _ref3$[1];\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n    var nativeValue = event.nativeEvent[key];\n    if (value !== null && value !== void 0 && value.setValue) {\n      value.setValue(nativeValue);\n    } else {\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n  return;\n}","map":{"version":3,"names":["State","TouchEventType","EventTypes","GestureHandlerOrchestrator","InteractionManager","PointerTracker","MouseButton","PointerType","GestureHandler","delegate","_this","_classCallCheck","_defineProperty","UNDETERMINED","enabled","MOUSE","newState","oldState","_this$propsRef$curren","propsRef","current","onGestureHandlerEvent","onGestureHandlerStateChange","resultEvent","transformEventData","lastSentState","invokeNullableMethod","state","ACTIVE","nativeEvent","undefined","_delegate","_createClass","key","value","init","viewRef","attachEventManager","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerLeave","onPointerLeave","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setOnPointerMoveOver","onPointerMoveOver","setOnPointerMoveOut","onPointerMoveOut","setOnWheel","onWheel","registerListeners","onCancel","onReset","resetProgress","reset","tracker","resetTracker","moveToState","sendIfDisabled","trackedPointersCount","config","needsPointerData","isFinished","cancelTouches","instance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","onFail","FAILED","cancel","CANCELLED","activate","force","arguments","length","manualActivation","onActivate","end","onEnd","END","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","tryToSendTouchEvent","tryToSendMoveEvent","shouldCancelWhenOutside","_event","out","active","sendEvent","sendTouchEvent","touchEvent","transformTouchEvent","_objectSpread","numberOfPointers","pointerInside","isPointerInBounds","getAbsoluteCoordsAverage","transformNativeEvent","handlerTag","target","timeStamp","Date","now","_this2","rect","measureView","all","changed","trackerData","trackedPointers","size","has","pointerId","forEach","element","id","getMappedTouchEventId","push","x","abosoluteCoords","pageX","y","pageY","absoluteX","absoluteY","eventType","CANCEL","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","changedTouches","allTouches","_this3","cancelEvent","lastCoords","lastRelativeCoords","getRelativeCoordsAverage","updateGestureConfig","_ref","_ref$enabled","props","_objectWithoutProperties","_excluded","_config","onEnabledChange","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hasCustomActivationCriteria","hitSlop","left","right","width","Error","height","top","bottom","_this$delegate$measur","horizontal","vertical","_this$tracker$getLast","getLastAbsoluteCoords","offsetX","offsetY","isButtonInConfig","mouseButton","LEFT","resetConfig","onDestroy","destroy","get","_handlerTag","set","_tracker","_state","_shouldCancelWhenOutside","_enabled","_pointerType","_active","_awaiting","_activationIndex","_shouldResetProgress","getTrackedPointersID","trackedPointersIDs","default","method","__getHandler","argMapping","__nodeConfig","Array","isArray","_ref2","entries","_ref3","_slicedToArray","index","_ref3$","nativeValue","setValue"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport IGestureHandler from './IGestureHandler';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { PointerType } from '../../PointerType';\nimport { GestureHandlerDelegate } from '../tools/GestureHandlerDelegate';\n\nexport default abstract class GestureHandler implements IGestureHandler {\n  private lastSentState: State | null = null;\n\n  private _state: State = State.UNDETERMINED;\n\n  private _shouldCancelWhenOutside = false;\n  protected hasCustomActivationCriteria = false;\n  private _enabled = false;\n\n  private viewRef!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private _handlerTag!: number;\n  private _config: Config = { enabled: false };\n\n  private _tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  private _activationIndex = 0;\n\n  private _awaiting = false;\n  private _active = false;\n\n  private _shouldResetProgress = false;\n  private _pointerType: PointerType = PointerType.MOUSE;\n\n  private _delegate: GestureHandlerDelegate<unknown, IGestureHandler>;\n\n  public constructor(\n    delegate: GestureHandlerDelegate<unknown, IGestureHandler>\n  ) {\n    this._delegate = delegate;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(viewRef: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.viewRef = viewRef;\n\n    this.state = State.UNDETERMINED;\n\n    this.delegate.init(viewRef, this);\n  }\n\n  public attachEventManager(manager: EventManager<unknown>): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerLeave(this.onPointerLeave.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setOnPointerMoveOver(this.onPointerMoveOver.bind(this));\n    manager.setOnPointerMoveOut(this.onPointerMoveOut.bind(this));\n    manager.setOnWheel(this.onWheel.bind(this));\n\n    manager.registerListeners();\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.delegate.reset();\n    this.state = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.state === newState) {\n      return;\n    }\n\n    const oldState = this.state;\n    this.state = newState;\n\n    if (\n      this.tracker.trackedPointersCount > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.instance.onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n\n    if (!this.enabled && this.isFinished()) {\n      this.state = State.UNDETERMINED;\n    }\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.state === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (this.state === State.ACTIVE || this.state === State.BEGAN) {\n      // Here the order of calling the delegate and moveToState is important.\n      // At this point we can use currentState as previuos state, because immediately after changing cursor we call moveToState method.\n      this.delegate.onFail();\n\n      this.moveToState(State.FAILED, sendIfDisabled);\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.state === State.ACTIVE ||\n      this.state === State.UNDETERMINED ||\n      this.state === State.BEGAN\n    ) {\n      this.onCancel();\n\n      // Same as above - order matters\n      this.delegate.onCancel();\n\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n    }\n  }\n\n  public activate(force = false) {\n    if (\n      (this.config.manualActivation !== true || force) &&\n      (this.state === State.UNDETERMINED || this.state === State.BEGAN)\n    ) {\n      this.delegate.onActivate();\n      this.moveToState(State.ACTIVE);\n    }\n  }\n\n  public end() {\n    if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n      // Same as above - order matters\n      this.delegate.onEnd();\n\n      this.moveToState(State.END);\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.instance.shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: IGestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.instance.shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.instance.recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.instance.cancelMouseAndPenGestures(this);\n    }\n\n    // TODO: Bring back touch events along with introducing `handleDown` method that will handle handler specific stuff\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false, event);\n  }\n  protected onPointerLeave(event: AdaptedEvent): void {\n    if (this.shouldCancelWhenOutside) {\n      switch (this.state) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    this.tryToSendTouchEvent(event);\n\n    this.cancel();\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true, event);\n  }\n  protected onPointerMoveOver(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  protected onPointerMoveOut(_event: AdaptedEvent): void {\n    // Used only by hover gesture handler atm\n  }\n  protected onWheel(_event: AdaptedEvent): void {\n    // Used only by pan gesture handler\n  }\n  protected tryToSendMoveEvent(out: boolean, event: AdaptedEvent): void {\n    if ((out && this.shouldCancelWhenOutside) || !this.enabled) {\n      return;\n    }\n\n    if (this.active) {\n      this.sendEvent(this.state, this.state);\n    }\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected tryToSendTouchEvent(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.state === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.trackedPointersCount,\n        state: newState,\n        pointerInside: this.delegate.isPointerInBounds(\n          this.tracker.getAbsoluteCoordsAverage()\n        ),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.viewRef,\n        oldState: newState !== oldState ? oldState : undefined,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.trackedPointers;\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.pageX,\n        y: event.y - rect.pageY,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.abosoluteCoords.x - rect.pageX,\n          y: element.abosoluteCoords.y - rect.pageY,\n          absoluteX: element.abosoluteCoords.x,\n          absoluteY: element.abosoluteCoords.y,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.state,\n        eventType: eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.delegate.measureView();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.trackedPointers;\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n\n      changed.push({\n        id: id,\n        x: element.abosoluteCoords.x - rect.pageX,\n        y: element.abosoluteCoords.y - rect.pageY,\n        absoluteX: element.abosoluteCoords.x,\n        absoluteY: element.abosoluteCoords.y,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.state,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n        pointerType: this.pointerType,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent(): Record<string, unknown> {\n    // Those properties are shared by most handlers and if not this method will be overriden\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const lastRelativeCoords = this.tracker.getRelativeCoordsAverage();\n\n    return {\n      x: lastRelativeCoords.x,\n      y: lastRelativeCoords.y,\n      absoluteX: lastCoords.x,\n      absoluteY: lastCoords.y,\n    };\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this._config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    this.delegate.onEnabledChange(enabled);\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.shouldCancelWhenOutside = this.config.shouldCancelWhenOutside;\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.state) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.instance.removeHandlerFromOrchestrator(this);\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const { width, height } = this.delegate.measureView();\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect = this.delegate.measureView();\n    const { x, y } = this.tracker.getLastAbsoluteCoords();\n    const offsetX: number = x - rect.pageX;\n    const offsetY: number = y - rect.pageY;\n\n    return (\n      offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom\n    );\n  }\n\n  public isButtonInConfig(mouseButton: MouseButton | undefined) {\n    return (\n      !mouseButton ||\n      (!this.config.mouseButton && mouseButton === MouseButton.LEFT) ||\n      (this.config.mouseButton && mouseButton & this.config.mouseButton)\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  public onDestroy(): void {\n    this.delegate.destroy(this.config);\n  }\n\n  //\n  // Getters and setters\n  //\n\n  public get handlerTag() {\n    return this._handlerTag;\n  }\n  public set handlerTag(value: number) {\n    this._handlerTag = value;\n  }\n\n  public get config(): Config {\n    return this._config;\n  }\n\n  public get delegate() {\n    return this._delegate;\n  }\n\n  public get tracker() {\n    return this._tracker;\n  }\n\n  public get state(): State {\n    return this._state;\n  }\n  protected set state(value: State) {\n    this._state = value;\n  }\n\n  public get shouldCancelWhenOutside() {\n    return this._shouldCancelWhenOutside;\n  }\n  protected set shouldCancelWhenOutside(value) {\n    this._shouldCancelWhenOutside = value;\n  }\n\n  public get enabled() {\n    return this._enabled;\n  }\n  protected set enabled(value) {\n    this._enabled = value;\n  }\n\n  public get pointerType(): PointerType {\n    return this._pointerType;\n  }\n  protected set pointerType(value: PointerType) {\n    this._pointerType = value;\n  }\n\n  public get active() {\n    return this._active;\n  }\n  protected set active(value) {\n    this._active = value;\n  }\n\n  public get awaiting() {\n    return this._awaiting;\n  }\n  protected set awaiting(value) {\n    this._awaiting = value;\n  }\n\n  public get activationIndex() {\n    return this._activationIndex;\n  }\n  protected set activationIndex(value) {\n    this._activationIndex = value;\n  }\n\n  public get shouldResetProgress() {\n    return this._shouldResetProgress;\n  }\n  protected set shouldResetProgress(value) {\n    this._shouldResetProgress = value;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.trackedPointersIDs;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.state === State.END ||\n      this.state === State.FAILED ||\n      this.state === State.CANCELLED\n    );\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping }: { argMapping: unknown } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      // Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      // RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}