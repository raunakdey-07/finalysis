{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport rfcIsEqual from 'react-fast-compare';\nimport { Point, Size, Rect, swapSizeDimmensions, makeChildlessRect, computeCenterGeometry, computeTopGeometry, computeBottomGeometry, computeLeftGeometry, computeRightGeometry } from \"./geom\";\nimport styleGenerator from \"./styles\";\nimport TooltipChildrenContext from \"./tooltip-children.context\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { TooltipChildrenContext };\nvar DEFAULT_DISPLAY_INSETS = {\n  top: 24,\n  bottom: 24,\n  left: 24,\n  right: 24\n};\nvar computeDisplayInsets = function computeDisplayInsets(insetsFromProps) {\n  return Object.assign({}, DEFAULT_DISPLAY_INSETS, insetsFromProps);\n};\nvar invertPlacement = function invertPlacement(placement) {\n  switch (placement) {\n    case 'top':\n      return 'bottom';\n    case 'bottom':\n      return 'top';\n    case 'right':\n      return 'left';\n    case 'left':\n      return 'right';\n    default:\n      return placement;\n  }\n};\nvar Tooltip = function (_Component) {\n  function Tooltip(props) {\n    var _this;\n    _classCallCheck(this, Tooltip);\n    _this = _callSuper(this, Tooltip, [props]);\n    _this.updateWindowDims = function (dims) {\n      _this.setState({\n        windowDims: dims.window,\n        contentSize: new Size(0, 0),\n        adjustedContentSize: new Size(0, 0),\n        anchorPoint: new Point(0, 0),\n        tooltipOrigin: new Point(0, 0),\n        childRect: new Rect(0, 0, 0, 0),\n        measurementsFinished: false\n      }, function () {\n        setTimeout(function () {\n          _this.measureChildRect();\n        }, 500);\n      });\n    };\n    _this.doChildlessPlacement = function () {\n      _this.onChildMeasurementComplete(makeChildlessRect({\n        displayInsets: _this.state.displayInsets,\n        placement: _this.state.placement,\n        windowDims: _this.state.windowDims\n      }));\n    };\n    _this.measureContent = function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n      var contentSize = new Size(width, height);\n      _this.setState({\n        contentSize: contentSize\n      }, function () {\n        _this.computeGeometry();\n      });\n    };\n    _this.onChildMeasurementComplete = function (rect) {\n      _this.setState({\n        childRect: rect,\n        waitingForInteractions: false\n      }, function () {\n        _this.isMeasuringChild = false;\n        if (_this.state.contentSize.width) {\n          _this.computeGeometry();\n        }\n      });\n    };\n    _this.measureChildRect = function () {\n      var doMeasurement = function doMeasurement() {\n        if (!_this.isMeasuringChild) {\n          _this.isMeasuringChild = true;\n          if (_this.childWrapper.current && typeof _this.childWrapper.current.measure === 'function') {\n            _this.childWrapper.current.measure(function (x, y, width, height, pageX, pageY) {\n              var childRect = new Rect(pageX, pageY, width, height);\n              if (Object.values(childRect).every(function (value) {\n                return value !== undefined;\n              })) {\n                _this.onChildMeasurementComplete(childRect);\n              } else {\n                _this.doChildlessPlacement();\n              }\n            });\n          } else {\n            _this.doChildlessPlacement();\n          }\n        }\n      };\n      if (_this.props.useInteractionManager) {\n        if (_this.interactionPromise) {\n          _this.interactionPromise.cancel();\n        }\n        _this.interactionPromise = InteractionManager.runAfterInteractions(function () {\n          doMeasurement();\n        });\n      } else {\n        doMeasurement();\n      }\n    };\n    _this.computeGeometry = function () {\n      var _this$props = _this.props,\n        arrowSize = _this$props.arrowSize,\n        childContentSpacing = _this$props.childContentSpacing;\n      var _this$state = _this.state,\n        childRect = _this$state.childRect,\n        contentSize = _this$state.contentSize,\n        displayInsets = _this$state.displayInsets,\n        placement = _this$state.placement,\n        windowDims = _this$state.windowDims;\n      var options = {\n        displayInsets: displayInsets,\n        childRect: childRect,\n        windowDims: windowDims,\n        arrowSize: placement === 'top' || placement === 'bottom' ? arrowSize : swapSizeDimmensions(arrowSize),\n        contentSize: contentSize,\n        childContentSpacing: childContentSpacing\n      };\n      var geom = computeTopGeometry(options);\n      if (placement === 'center' && React.Children.count(_this.props.children) === 0) {\n        geom = computeCenterGeometry(options);\n      } else {\n        switch (placement) {\n          case 'bottom':\n            geom = computeBottomGeometry(options);\n            break;\n          case 'left':\n            geom = computeLeftGeometry(options);\n            break;\n          case 'right':\n            geom = computeRightGeometry(options);\n            break;\n          case 'top':\n          default:\n            break;\n        }\n      }\n      var _geom = geom,\n        tooltipOrigin = _geom.tooltipOrigin,\n        anchorPoint = _geom.anchorPoint,\n        adjustedContentSize = _geom.adjustedContentSize;\n      _this.setState({\n        tooltipOrigin: tooltipOrigin,\n        anchorPoint: anchorPoint,\n        placement: placement,\n        measurementsFinished: childRect.width && contentSize.width,\n        adjustedContentSize: adjustedContentSize\n      });\n    };\n    _this.renderChildInTooltip = function () {\n      var _this$state$childRect = _this.state.childRect,\n        height = _this$state$childRect.height,\n        width = _this$state$childRect.width,\n        x = _this$state$childRect.x,\n        y = _this$state$childRect.y;\n      if (_this.props.horizontalAdjustment) {\n        x = x + _this.props.horizontalAdjustment;\n      }\n      var onTouchEnd = function onTouchEnd() {\n        if (_this.props.closeOnChildInteraction) {\n          _this.props.onClose();\n        }\n      };\n      return _jsx(TooltipChildrenContext.Provider, {\n        value: {\n          tooltipDuplicate: true\n        },\n        children: _jsx(View, {\n          onTouchEnd: onTouchEnd,\n          pointerEvents: _this.props.allowChildInteraction ? 'box-none' : 'none',\n          style: [{\n            position: 'absolute',\n            height: height,\n            width: width,\n            top: y,\n            left: x,\n            alignItems: 'center',\n            justifyContent: 'center'\n          }, _this.props.childrenWrapperStyle],\n          children: _this.props.children\n        })\n      });\n    };\n    _this.renderContentForTooltip = function () {\n      var generatedStyles = styleGenerator({\n        adjustedContentSize: _this.state.adjustedContentSize,\n        anchorPoint: _this.state.anchorPoint,\n        arrowSize: _this.props.arrowSize,\n        displayInsets: _this.state.displayInsets,\n        measurementsFinished: _this.state.measurementsFinished,\n        ownProps: _objectSpread({}, _this.props),\n        placement: _this.state.placement,\n        tooltipOrigin: _this.state.tooltipOrigin,\n        topAdjustment: _this.props.topAdjustment\n      });\n      var hasChildren = React.Children.count(_this.props.children) > 0;\n      var onPressBackground = function onPressBackground() {\n        if (_this.props.closeOnBackgroundInteraction) {\n          _this.props.onClose();\n        }\n      };\n      var onPressContent = function onPressContent() {\n        if (_this.props.closeOnContentInteraction) {\n          _this.props.onClose();\n        }\n      };\n      return _jsx(TouchableWithoutFeedback, {\n        onPress: onPressBackground,\n        accessible: _this.props.accessible,\n        children: _jsxs(View, {\n          style: generatedStyles.containerStyle,\n          children: [_jsx(View, {\n            style: [generatedStyles.backgroundStyle],\n            children: _jsxs(View, {\n              style: generatedStyles.tooltipStyle,\n              children: [hasChildren ? _jsx(View, {\n                style: generatedStyles.arrowStyle\n              }) : null, _jsx(View, {\n                onLayout: _this.measureContent,\n                style: generatedStyles.contentStyle,\n                children: _jsx(TouchableWithoutFeedback, {\n                  onPress: onPressContent,\n                  accessible: _this.props.accessible,\n                  children: _this.props.content\n                })\n              })]\n            })\n          }), hasChildren && _this.props.showChildInTooltip ? _this.renderChildInTooltip() : null]\n        })\n      });\n    };\n    var isVisible = props.isVisible,\n      useInteractionManager = props.useInteractionManager;\n    _this.isMeasuringChild = false;\n    _this.interactionPromise = null;\n    _this.dimensionsSubscription = null;\n    _this.childWrapper = React.createRef();\n    _this.state = {\n      waitingForInteractions: isVisible && useInteractionManager,\n      contentSize: new Size(0, 0),\n      adjustedContentSize: new Size(0, 0),\n      anchorPoint: new Point(0, 0),\n      tooltipOrigin: new Point(0, 0),\n      childRect: new Rect(0, 0, 0, 0),\n      displayInsets: computeDisplayInsets(props.displayInsets),\n      placement: React.Children.count(props.children) === 0 ? invertPlacement(props.placement) : props.placement,\n      measurementsFinished: false,\n      windowDims: Dimensions.get('window')\n    };\n    return _this;\n  }\n  _inherits(Tooltip, _Component);\n  return _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.dimensionsSubscription = Dimensions.addEventListener('change', this.updateWindowDims);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        content = _this$props2.content,\n        isVisible = _this$props2.isVisible,\n        placement = _this$props2.placement;\n      var displayInsets = this.state.displayInsets;\n      var contentChanged = !rfcIsEqual(prevProps.content, content);\n      var placementChanged = prevProps.placement !== placement;\n      var becameVisible = isVisible && !prevProps.isVisible;\n      var insetsChanged = !rfcIsEqual(prevState.displayInsets, displayInsets);\n      if (contentChanged || placementChanged || becameVisible || insetsChanged) {\n        setTimeout(function () {\n          _this2.measureChildRect();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$dimensionsSubsc;\n      if ((_this$dimensionsSubsc = this.dimensionsSubscription) != null && _this$dimensionsSubsc.remove) {\n        this.dimensionsSubscription.remove();\n      } else {\n        Dimensions.removeEventListener('change', this.updateWindowDims);\n      }\n      if (this.interactionPromise) {\n        this.interactionPromise.cancel();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        children = _this$props3.children,\n        isVisible = _this$props3.isVisible,\n        useReactNativeModal = _this$props3.useReactNativeModal,\n        modalComponent = _this$props3.modalComponent;\n      var hasChildren = React.Children.count(children) > 0;\n      var showTooltip = isVisible && !this.state.waitingForInteractions;\n      var ModalComponent = modalComponent || Modal;\n      return _jsxs(React.Fragment, {\n        children: [useReactNativeModal ? _jsx(ModalComponent, {\n          transparent: true,\n          visible: showTooltip,\n          onRequestClose: this.props.onClose,\n          supportedOrientations: this.props.supportedOrientations,\n          children: this.renderContentForTooltip()\n        }) : null, hasChildren ? _jsx(View, {\n          ref: this.childWrapper,\n          onLayout: this.measureChildRect,\n          style: this.props.parentWrapperStyle,\n          children: children\n        }) : null, !useReactNativeModal && showTooltip ? this.renderContentForTooltip() : null]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextState = {};\n      var nextPlacement = React.Children.count(nextProps.children) === 0 ? invertPlacement(nextProps.placement) : nextProps.placement;\n      if (nextPlacement !== prevState.placement) {\n        nextState.placement = nextPlacement;\n      }\n      var nextDisplayInsets = computeDisplayInsets(nextProps.displayInsets);\n      if (!rfcIsEqual(nextDisplayInsets, prevState.displayInsets)) {\n        nextState.displayInsets = nextDisplayInsets;\n      }\n      if (prevState.measurementsFinished && !nextProps.isVisible) {\n        nextState.measurementsFinished = false;\n        nextState.adjustedContentSize = new Size(0, 0);\n      }\n      if (Object.keys(nextState).length) {\n        return nextState;\n      }\n      return null;\n    }\n  }]);\n}(Component);\nTooltip.defaultProps = {\n  allowChildInteraction: true,\n  arrowSize: new Size(16, 8),\n  backgroundColor: 'rgba(0,0,0,0.5)',\n  childContentSpacing: 4,\n  children: null,\n  closeOnChildInteraction: true,\n  closeOnContentInteraction: true,\n  closeOnBackgroundInteraction: true,\n  content: _jsx(View, {}),\n  displayInsets: {},\n  disableShadow: false,\n  isVisible: false,\n  onClose: function onClose() {\n    console.warn('[react-native-walkthrough-tooltip] onClose prop not provided');\n  },\n  placement: 'center',\n  showChildInTooltip: true,\n  supportedOrientations: ['portrait', 'landscape'],\n  useInteractionManager: false,\n  useReactNativeModal: true,\n  topAdjustment: 0,\n  horizontalAdjustment: 0,\n  accessible: true\n};\nTooltip.propTypes = {\n  allowChildInteraction: PropTypes.bool,\n  arrowSize: PropTypes.shape({\n    height: PropTypes.number,\n    width: PropTypes.number\n  }),\n  backgroundColor: PropTypes.string,\n  childContentSpacing: PropTypes.number,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  closeOnChildInteraction: PropTypes.bool,\n  closeOnContentInteraction: PropTypes.bool,\n  closeOnBackgroundInteraction: PropTypes.bool,\n  content: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  displayInsets: PropTypes.shape({\n    top: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number\n  }),\n  disableShadow: PropTypes.bool,\n  isVisible: PropTypes.bool,\n  onClose: PropTypes.func,\n  placement: PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'center']),\n  showChildInTooltip: PropTypes.bool,\n  supportedOrientations: PropTypes.arrayOf(PropTypes.string),\n  useInteractionManager: PropTypes.bool,\n  useReactNativeModal: PropTypes.bool,\n  topAdjustment: PropTypes.number,\n  horizontalAdjustment: PropTypes.number,\n  accessible: PropTypes.bool\n};\nexport default Tooltip;","map":{"version":3,"names":["React","Component","PropTypes","Dimensions","InteractionManager","Modal","TouchableWithoutFeedback","View","rfcIsEqual","Point","Size","Rect","swapSizeDimmensions","makeChildlessRect","computeCenterGeometry","computeTopGeometry","computeBottomGeometry","computeLeftGeometry","computeRightGeometry","styleGenerator","TooltipChildrenContext","jsx","_jsx","jsxs","_jsxs","DEFAULT_DISPLAY_INSETS","top","bottom","left","right","computeDisplayInsets","insetsFromProps","Object","assign","invertPlacement","placement","Tooltip","_Component","props","_this","_classCallCheck","_callSuper","updateWindowDims","dims","setState","windowDims","window","contentSize","adjustedContentSize","anchorPoint","tooltipOrigin","childRect","measurementsFinished","setTimeout","measureChildRect","doChildlessPlacement","onChildMeasurementComplete","displayInsets","state","measureContent","e","_e$nativeEvent$layout","nativeEvent","layout","width","height","computeGeometry","rect","waitingForInteractions","isMeasuringChild","doMeasurement","childWrapper","current","measure","x","y","pageX","pageY","values","every","value","undefined","useInteractionManager","interactionPromise","cancel","runAfterInteractions","_this$props","arrowSize","childContentSpacing","_this$state","options","geom","Children","count","children","_geom","renderChildInTooltip","_this$state$childRect","horizontalAdjustment","onTouchEnd","closeOnChildInteraction","onClose","Provider","tooltipDuplicate","pointerEvents","allowChildInteraction","style","position","alignItems","justifyContent","childrenWrapperStyle","renderContentForTooltip","generatedStyles","ownProps","_objectSpread","topAdjustment","hasChildren","onPressBackground","closeOnBackgroundInteraction","onPressContent","closeOnContentInteraction","onPress","accessible","containerStyle","backgroundStyle","tooltipStyle","arrowStyle","onLayout","contentStyle","content","showChildInTooltip","isVisible","dimensionsSubscription","createRef","get","_inherits","_createClass","key","componentDidMount","addEventListener","componentDidUpdate","prevProps","prevState","_this2","_this$props2","contentChanged","placementChanged","becameVisible","insetsChanged","componentWillUnmount","_this$dimensionsSubsc","remove","removeEventListener","render","_this$props3","useReactNativeModal","modalComponent","showTooltip","ModalComponent","Fragment","transparent","visible","onRequestClose","supportedOrientations","ref","parentWrapperStyle","getDerivedStateFromProps","nextProps","nextState","nextPlacement","nextDisplayInsets","keys","length","defaultProps","backgroundColor","disableShadow","console","warn","propTypes","bool","shape","number","string","oneOfType","node","func","oneOf","arrayOf"],"sources":["C:/Users/rauna/Project Finalysis/node_modules/react-native-walkthrough-tooltip/src/tooltip.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Dimensions,\n  InteractionManager,\n  Modal,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport rfcIsEqual from 'react-fast-compare';\nimport {\n  Point,\n  Size,\n  Rect,\n  swapSizeDimmensions,\n  makeChildlessRect,\n  computeCenterGeometry,\n  computeTopGeometry,\n  computeBottomGeometry,\n  computeLeftGeometry,\n  computeRightGeometry,\n} from './geom';\nimport styleGenerator from './styles';\nimport TooltipChildrenContext from './tooltip-children.context';\n\nexport { TooltipChildrenContext };\n\nconst DEFAULT_DISPLAY_INSETS = {\n  top: 24,\n  bottom: 24,\n  left: 24,\n  right: 24,\n};\n\nconst computeDisplayInsets = insetsFromProps =>\n  Object.assign({}, DEFAULT_DISPLAY_INSETS, insetsFromProps);\n\nconst invertPlacement = placement => {\n  switch (placement) {\n    case 'top':\n      return 'bottom';\n    case 'bottom':\n      return 'top';\n    case 'right':\n      return 'left';\n    case 'left':\n      return 'right';\n    default:\n      return placement;\n  }\n};\n\nclass Tooltip extends Component {\n  static defaultProps = {\n    allowChildInteraction: true,\n    arrowSize: new Size(16, 8),\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    childContentSpacing: 4,\n    children: null,\n    closeOnChildInteraction: true,\n    closeOnContentInteraction: true,\n    closeOnBackgroundInteraction: true,\n    content: <View />,\n    displayInsets: {},\n    disableShadow: false,\n    isVisible: false,\n    onClose: () => {\n      console.warn(\n        '[react-native-walkthrough-tooltip] onClose prop not provided',\n      );\n    },\n    placement: 'center', // falls back to \"top\" if there ARE children\n    showChildInTooltip: true,\n    supportedOrientations: ['portrait', 'landscape'],\n    useInteractionManager: false,\n    useReactNativeModal: true,\n    topAdjustment: 0,\n    horizontalAdjustment: 0,\n    accessible: true,\n  };\n\n  static propTypes = {\n    allowChildInteraction: PropTypes.bool,\n    arrowSize: PropTypes.shape({\n      height: PropTypes.number,\n      width: PropTypes.number,\n    }),\n    backgroundColor: PropTypes.string,\n    childContentSpacing: PropTypes.number,\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    closeOnChildInteraction: PropTypes.bool,\n    closeOnContentInteraction: PropTypes.bool,\n    closeOnBackgroundInteraction: PropTypes.bool,\n    content: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    displayInsets: PropTypes.shape({\n      top: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n      right: PropTypes.number,\n    }),\n    disableShadow: PropTypes.bool,\n    isVisible: PropTypes.bool,\n    onClose: PropTypes.func,\n    placement: PropTypes.oneOf(['top', 'left', 'bottom', 'right', 'center']),\n    showChildInTooltip: PropTypes.bool,\n    supportedOrientations: PropTypes.arrayOf(PropTypes.string),\n    useInteractionManager: PropTypes.bool,\n    useReactNativeModal: PropTypes.bool,\n    topAdjustment: PropTypes.number,\n    horizontalAdjustment: PropTypes.number,\n    accessible: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { isVisible, useInteractionManager } = props;\n\n    this.isMeasuringChild = false;\n    this.interactionPromise = null;\n    this.dimensionsSubscription = null;\n\n    this.childWrapper = React.createRef();\n    this.state = {\n      // no need to wait for interactions if not visible initially\n      waitingForInteractions: isVisible && useInteractionManager,\n      contentSize: new Size(0, 0),\n      adjustedContentSize: new Size(0, 0),\n      anchorPoint: new Point(0, 0),\n      tooltipOrigin: new Point(0, 0),\n      childRect: new Rect(0, 0, 0, 0),\n      displayInsets: computeDisplayInsets(props.displayInsets),\n      // if we have no children, and place the tooltip at the \"top\" we want it to\n      // behave like placement \"bottom\", i.e. display below the top of the screen\n      placement:\n        React.Children.count(props.children) === 0\n          ? invertPlacement(props.placement)\n          : props.placement,\n      measurementsFinished: false,\n      windowDims: Dimensions.get('window'),\n    };\n  }\n\n  componentDidMount() {\n    this.dimensionsSubscription = Dimensions.addEventListener(\n      'change',\n      this.updateWindowDims,\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { content, isVisible, placement } = this.props;\n    const { displayInsets } = this.state;\n\n    const contentChanged = !rfcIsEqual(prevProps.content, content);\n    const placementChanged = prevProps.placement !== placement;\n    const becameVisible = isVisible && !prevProps.isVisible;\n    const insetsChanged = !rfcIsEqual(prevState.displayInsets, displayInsets);\n\n    if (contentChanged || placementChanged || becameVisible || insetsChanged) {\n      setTimeout(() => {\n        this.measureChildRect();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // removeEventListener deprecated\n    // https://reactnative.dev/docs/dimensions#removeeventlistener\n    if (this.dimensionsSubscription?.remove) {\n      // react native >= 0.65.*\n      this.dimensionsSubscription.remove();\n    } else {\n      // react native < 0.65.*\n      Dimensions.removeEventListener('change', this.updateWindowDims);\n    }\n\n    if (this.interactionPromise) {\n      this.interactionPromise.cancel();\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextState = {};\n\n    // update placement in state if the prop changed\n    const nextPlacement =\n      React.Children.count(nextProps.children) === 0\n        ? invertPlacement(nextProps.placement)\n        : nextProps.placement;\n\n    if (nextPlacement !== prevState.placement) {\n      nextState.placement = nextPlacement;\n    }\n\n    // update computed display insets if they changed\n    const nextDisplayInsets = computeDisplayInsets(nextProps.displayInsets);\n    if (!rfcIsEqual(nextDisplayInsets, prevState.displayInsets)) {\n      nextState.displayInsets = nextDisplayInsets;\n    }\n\n    // set measurements finished flag to false when tooltip closes\n    if (prevState.measurementsFinished && !nextProps.isVisible) {\n      nextState.measurementsFinished = false;\n      nextState.adjustedContentSize = new Size(0, 0);\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  updateWindowDims = dims => {\n    this.setState(\n      {\n        windowDims: dims.window,\n        contentSize: new Size(0, 0),\n        adjustedContentSize: new Size(0, 0),\n        anchorPoint: new Point(0, 0),\n        tooltipOrigin: new Point(0, 0),\n        childRect: new Rect(0, 0, 0, 0),\n        measurementsFinished: false,\n      },\n      () => {\n        setTimeout(() => {\n          this.measureChildRect();\n        }, 500); // give the rotation a moment to finish\n      },\n    );\n  };\n\n  doChildlessPlacement = () => {\n    this.onChildMeasurementComplete(\n      makeChildlessRect({\n        displayInsets: this.state.displayInsets,\n        placement: this.state.placement, // MUST use from state, not props\n        windowDims: this.state.windowDims,\n      }),\n    );\n  };\n\n  measureContent = e => {\n    const { width, height } = e.nativeEvent.layout;\n    const contentSize = new Size(width, height);\n    this.setState({ contentSize }, () => {\n      this.computeGeometry();\n    });\n  };\n\n  onChildMeasurementComplete = rect => {\n    this.setState(\n      {\n        childRect: rect,\n        waitingForInteractions: false,\n      },\n      () => {\n        this.isMeasuringChild = false;\n        if (this.state.contentSize.width) {\n          this.computeGeometry();\n        }\n      },\n    );\n  };\n\n  measureChildRect = () => {\n    const doMeasurement = () => {\n      if (!this.isMeasuringChild) {\n        this.isMeasuringChild = true;\n        if (\n          this.childWrapper.current &&\n          typeof this.childWrapper.current.measure === 'function'\n        ) {\n          this.childWrapper.current.measure(\n            (x, y, width, height, pageX, pageY) => {\n              const childRect = new Rect(pageX, pageY, width, height);\n              if (\n                Object.values(childRect).every(value => value !== undefined)\n              ) {\n                this.onChildMeasurementComplete(childRect);\n              } else {\n                this.doChildlessPlacement();\n              }\n            },\n          );\n        } else {\n          this.doChildlessPlacement();\n        }\n      }\n    };\n\n    if (this.props.useInteractionManager) {\n      if (this.interactionPromise) {\n        this.interactionPromise.cancel();\n      }\n      this.interactionPromise = InteractionManager.runAfterInteractions(() => {\n        doMeasurement();\n      });\n    } else {\n      doMeasurement();\n    }\n  };\n\n  computeGeometry = () => {\n    const { arrowSize, childContentSpacing } = this.props;\n    const {\n      childRect,\n      contentSize,\n      displayInsets,\n      placement,\n      windowDims,\n    } = this.state;\n\n    const options = {\n      displayInsets,\n      childRect,\n      windowDims,\n      arrowSize:\n        placement === 'top' || placement === 'bottom'\n          ? arrowSize\n          : swapSizeDimmensions(arrowSize),\n      contentSize,\n      childContentSpacing,\n    };\n\n    let geom = computeTopGeometry(options);\n\n    // special case for centered, childless placement tooltip\n    if (\n      placement === 'center' &&\n      React.Children.count(this.props.children) === 0\n    ) {\n      geom = computeCenterGeometry(options);\n    } else {\n      switch (placement) {\n        case 'bottom':\n          geom = computeBottomGeometry(options);\n          break;\n        case 'left':\n          geom = computeLeftGeometry(options);\n          break;\n        case 'right':\n          geom = computeRightGeometry(options);\n          break;\n        case 'top':\n        default:\n          break; // computed just above if-else-block\n      }\n    }\n\n    const { tooltipOrigin, anchorPoint, adjustedContentSize } = geom;\n\n    this.setState({\n      tooltipOrigin,\n      anchorPoint,\n      placement,\n      measurementsFinished: childRect.width && contentSize.width,\n      adjustedContentSize,\n    });\n  };\n\n  renderChildInTooltip = () => {\n    let { height, width, x, y } = this.state.childRect;\n\n    if (this.props.horizontalAdjustment) {\n      x = x + this.props.horizontalAdjustment;\n    }\n\n    const onTouchEnd = () => {\n      if (this.props.closeOnChildInteraction) {\n        this.props.onClose();\n      }\n    };\n\n    return (\n      <TooltipChildrenContext.Provider value={{ tooltipDuplicate: true }}>\n        <View\n          onTouchEnd={onTouchEnd}\n          pointerEvents={this.props.allowChildInteraction ? 'box-none' : 'none'}\n          style={[\n            {\n              position: 'absolute',\n              height,\n              width,\n              top: y,\n              left: x,\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n            this.props.childrenWrapperStyle,\n          ]}\n        >\n          {this.props.children}\n        </View>\n      </TooltipChildrenContext.Provider>\n    );\n  };\n\n  renderContentForTooltip = () => {\n    const generatedStyles = styleGenerator({\n      adjustedContentSize: this.state.adjustedContentSize,\n      anchorPoint: this.state.anchorPoint,\n      arrowSize: this.props.arrowSize,\n      displayInsets: this.state.displayInsets,\n      measurementsFinished: this.state.measurementsFinished,\n      ownProps: { ...this.props },\n      placement: this.state.placement,\n      tooltipOrigin: this.state.tooltipOrigin,\n      topAdjustment: this.props.topAdjustment,\n    });\n\n    const hasChildren = React.Children.count(this.props.children) > 0;\n\n    const onPressBackground = () => {\n      if (this.props.closeOnBackgroundInteraction) {\n        this.props.onClose();\n      }\n    };\n\n    const onPressContent = () => {\n      if (this.props.closeOnContentInteraction) {\n        this.props.onClose();\n      }\n    };\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPressBackground}\n        accessible={this.props.accessible}\n      >\n        <View style={generatedStyles.containerStyle}>\n          <View style={[generatedStyles.backgroundStyle]}>\n            <View style={generatedStyles.tooltipStyle}>\n              {hasChildren ? <View style={generatedStyles.arrowStyle} /> : null}\n              <View\n                onLayout={this.measureContent}\n                style={generatedStyles.contentStyle}\n              >\n                <TouchableWithoutFeedback\n                  onPress={onPressContent}\n                  accessible={this.props.accessible}\n                >\n                  {this.props.content}\n                </TouchableWithoutFeedback>\n              </View>\n            </View>\n          </View>\n          {hasChildren && this.props.showChildInTooltip\n            ? this.renderChildInTooltip()\n            : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  render() {\n    const {\n      children,\n      isVisible,\n      useReactNativeModal,\n      modalComponent,\n    } = this.props;\n\n    const hasChildren = React.Children.count(children) > 0;\n    const showTooltip = isVisible && !this.state.waitingForInteractions;\n    const ModalComponent = modalComponent || Modal;\n\n    return (\n      <React.Fragment>\n        {useReactNativeModal ? (\n          <ModalComponent\n            transparent\n            visible={showTooltip}\n            onRequestClose={this.props.onClose}\n            supportedOrientations={this.props.supportedOrientations}\n          >\n            {this.renderContentForTooltip()}\n          </ModalComponent>\n        ) : null}\n\n        {/* This renders the child element in place in the parent's layout */}\n        {hasChildren ? (\n          <View\n            ref={this.childWrapper}\n            onLayout={this.measureChildRect}\n            style={this.props.parentWrapperStyle}\n          >\n            {children}\n          </View>\n        ) : null}\n\n        {!useReactNativeModal && showTooltip\n          ? this.renderContentForTooltip()\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tooltip;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}