{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { useImperativeHandle, useRef } from 'react';\nimport { NativeViewGestureHandler, nativeViewProps } from \"./NativeViewGestureHandler\";\nvar NATIVE_WRAPPER_PROPS_FILTER = [].concat(_toConsumableArray(nativeViewProps), ['onGestureHandlerEvent', 'onGestureHandlerStateChange']);\nexport default function createNativeWrapper(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _Component$render;\n  var ComponentWrapper = React.forwardRef(function (props, ref) {\n    var _Object$keys$reduce = Object.keys(props).reduce(function (res, key) {\n        var allowedKeys = NATIVE_WRAPPER_PROPS_FILTER;\n        if (allowedKeys.includes(key)) {\n          res.gestureHandlerProps[key] = props[key];\n        } else {\n          res.childProps[key] = props[key];\n        }\n        return res;\n      }, {\n        gestureHandlerProps: _objectSpread({}, config),\n        childProps: {\n          enabled: props.enabled,\n          hitSlop: props.hitSlop,\n          testID: props.testID\n        }\n      }),\n      gestureHandlerProps = _Object$keys$reduce.gestureHandlerProps,\n      childProps = _Object$keys$reduce.childProps;\n    var _ref = useRef(null);\n    var _gestureHandlerRef = useRef(null);\n    useImperativeHandle(ref, function () {\n      var node = _gestureHandlerRef.current;\n      if (_ref.current && node) {\n        _ref.current.handlerTag = node.handlerTag;\n        return _ref.current;\n      }\n      return null;\n    }, [_ref, _gestureHandlerRef]);\n    return React.createElement(NativeViewGestureHandler, _extends({}, gestureHandlerProps, {\n      ref: _gestureHandlerRef\n    }), React.createElement(Component, _extends({}, childProps, {\n      ref: _ref\n    })));\n  });\n  ComponentWrapper.displayName = (Component === null || Component === void 0 ? void 0 : Component.displayName) || (Component === null || Component === void 0 ? void 0 : (_Component$render = Component.render) === null || _Component$render === void 0 ? void 0 : _Component$render.name) || typeof Component === 'string' && Component || 'ComponentWrapper';\n  return ComponentWrapper;\n}","map":{"version":3,"names":["React","useImperativeHandle","useRef","NativeViewGestureHandler","nativeViewProps","NATIVE_WRAPPER_PROPS_FILTER","concat","_toConsumableArray","createNativeWrapper","Component","config","arguments","length","undefined","_Component$render","ComponentWrapper","forwardRef","props","ref","_Object$keys$reduce","Object","keys","reduce","res","key","allowedKeys","includes","gestureHandlerProps","childProps","_objectSpread","enabled","hitSlop","testID","_ref","_gestureHandlerRef","node","current","handlerTag","createElement","_extends","displayName","render","name"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\createNativeWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useImperativeHandle, useRef } from 'react';\n\nimport {\n  NativeViewGestureHandler,\n  NativeViewGestureHandlerProps,\n  nativeViewProps,\n} from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  ...nativeViewProps,\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n] as const;\n\nexport default function createNativeWrapper<P>(\n  Component: React.ComponentType<P>,\n  config: Readonly<NativeViewGestureHandlerProps> = {}\n) {\n  const ComponentWrapper = React.forwardRef<\n    React.ComponentType<any>,\n    P & NativeViewGestureHandlerProps\n  >((props, ref) => {\n    // Filter out props that should be passed to gesture handler wrapper\n    const { gestureHandlerProps, childProps } = Object.keys(props).reduce(\n      (res, key) => {\n        // TS being overly protective with it's types, see https://github.com/microsoft/TypeScript/issues/26255#issuecomment-458013731 for more info\n        const allowedKeys: readonly string[] = NATIVE_WRAPPER_PROPS_FILTER;\n        if (allowedKeys.includes(key)) {\n          // @ts-ignore FIXME(TS)\n          res.gestureHandlerProps[key] = props[key];\n        } else {\n          // @ts-ignore FIXME(TS)\n          res.childProps[key] = props[key];\n        }\n        return res;\n      },\n      {\n        gestureHandlerProps: { ...config }, // Watch out not to modify config\n        childProps: {\n          enabled: props.enabled,\n          hitSlop: props.hitSlop,\n          testID: props.testID,\n        } as P,\n      }\n    );\n    const _ref = useRef<React.ComponentType<P>>(null);\n    const _gestureHandlerRef = useRef<React.ComponentType<P>>(null);\n    useImperativeHandle(\n      ref,\n      // @ts-ignore TODO(TS) decide how nulls work in this context\n      () => {\n        const node = _gestureHandlerRef.current;\n        // Add handlerTag for relations config\n        if (_ref.current && node) {\n          // @ts-ignore FIXME(TS) think about createHandler return type\n          _ref.current.handlerTag = node.handlerTag;\n          return _ref.current;\n        }\n        return null;\n      },\n      [_ref, _gestureHandlerRef]\n    );\n    return (\n      <NativeViewGestureHandler\n        {...gestureHandlerProps}\n        // @ts-ignore TODO(TS)\n        ref={_gestureHandlerRef}>\n        <Component {...childProps} ref={_ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  ComponentWrapper.displayName =\n    Component?.displayName ||\n    // @ts-ignore if render doesn't exist it will return undefined and go further\n    Component?.render?.name ||\n    (typeof Component === 'string' && Component) ||\n    'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,SACEC,wBADF,EAGEC,eAHF;AAaA,IAAMC,2BAA2B,MAAAC,MAAA,CAAAC,kBAAA,CAC5BH,eAD+B,IAElC,uBAFkC,EAGlC,6BAHkC,EAApC;AAMA,eAAe,SAASI,mBAATA,CACbC,SADa,EAGb;EAAA,IADAC,MAA+C,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAFrC;EAGb,IAAAG,iBAAA;EACA,IAAMC,gBAAgB,GAAGf,KAAK,CAACgB,UAAN,CAGvB,UAACC,KAAD,EAAQC,GAAR,EAAgB;IAEhB,IAAAC,mBAAA,GAA4CC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAC1C,UAACC,GAAD,EAAMC,GAAN,EAAc;QAEZ,IAAMC,WAA8B,GAAGpB,2BAAvC;QACA,IAAIoB,WAAW,CAACC,QAAZ,CAAqBF,GAArB,CAAJ,EAA+B;UAE7BD,GAAG,CAACI,mBAAJ,CAAwBH,GAAxB,IAA+BP,KAAK,CAACO,GAAD,CAApC;QACD,CAHD,MAGO;UAELD,GAAG,CAACK,UAAJ,CAAeJ,GAAf,IAAsBP,KAAK,CAACO,GAAD,CAA3B;QACD;QACD,OAAOD,GAAP;MACD,CAZyC,EAa1C;QACEI,mBAAmB,EAAAE,aAAA,KAAOnB,MAAA,CAD5B;QAEEkB,UAAU,EAAE;UACVE,OAAO,EAAEb,KAAK,CAACa,OADL;UAEVC,OAAO,EAAEd,KAAK,CAACc,OAFL;UAGVC,MAAM,EAAEf,KAAK,CAACe;QAHJ;MAFd,CAb0C,CAA5C;MAAQL,mBAAF,GAAAR,mBAAA,CAAEQ,mBAAF;MAAuBC,UAAA,GAAAT,mBAAA,CAAAS,UAAA;IAsB7B,IAAMK,IAAI,GAAG/B,MAAM,CAAyB,IAAzB,CAAnB;IACA,IAAMgC,kBAAkB,GAAGhC,MAAM,CAAyB,IAAzB,CAAjC;IACAD,mBAAmB,CACjBiB,GADiB,EAGjB,YAAM;MACJ,IAAMiB,IAAI,GAAGD,kBAAkB,CAACE,OAAhC;MAEA,IAAIH,IAAI,CAACG,OAAL,IAAgBD,IAApB,EAA0B;QAExBF,IAAI,CAACG,OAAL,CAAaC,UAAb,GAA0BF,IAAI,CAACE,UAA/B;QACA,OAAOJ,IAAI,CAACG,OAAZ;MACD;MACD,OAAO,IAAP;IACD,CAZgB,EAajB,CAACH,IAAD,EAAOC,kBAAP,CAbiB,CAAnB;IAeA,OACElC,KAAA,CAAAsC,aAAA,CAACnC,wBAAD,EAAAoC,QAAA,KACMZ,mBADN;MAGET,GAAG,EAAEgB;IAHP,IAIElC,KAAA,CAAAsC,aAAA,CAAC7B,SAAD,EAAA8B,QAAA,KAAeX,UAAf;MAA2BV,GAAG,EAAEe;IAAhC,GAJF,CADF;EAQD,CApDwB,CAAzB;EAuDAlB,gBAAgB,CAACyB,WAAjB,GACE,CAAA/B,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAE+B,WAAX,MAEA/B,SAFA,aAEAA,SAFA,wBAAAK,iBAAA,GAEAL,SAAS,CAAEgC,MAFX,cAAA3B,iBAAA,uBAEAA,iBAAA,CAAmB4B,IAFnB,KAGC,OAAOjC,SAAP,KAAqB,QAArB,IAAiCA,SAHlC,IAIA,kBALF;EAOA,OAAOM,gBAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}