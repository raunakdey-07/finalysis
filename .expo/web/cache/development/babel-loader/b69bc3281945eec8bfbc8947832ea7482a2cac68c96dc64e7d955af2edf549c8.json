{"ast":null,"code":"\"use strict\";\n\nexport {};","map":{"version":3,"names":[],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-autocomplete-dropdown\\src\\types\\index.ts"],"sourcesContent":["import type { MutableRefObject } from 'react'\nimport type React from 'react'\nimport type { StyleProp, TextInputProps, TextStyle, ViewStyle, FlatListProps, TextInput } from 'react-native'\n\nexport type AutocompleteDropdownItem = {\n  id: string\n  title?: string | null\n}\n\nexport interface IAutocompleteDropdownRef {\n  clear: () => void\n  close: () => void\n  blur: () => void\n  open: () => Promise<void>\n  setInputText: (text: string) => void\n  toggle: () => void\n  setItem: (item: AutocompleteDropdownItem) => void\n}\n\nexport interface IAutocompleteDropdownProps {\n  /**\n   * @example [\n   *     { id: \"1\", title: \"Alpha\" },\n   *     { id: \"2\", title: \"Beta\" },\n   *     { id: \"3\", title: \"Gamma\" }\n   * ]\n   */\n  dataSet: AutocompleteDropdownItem[] | null\n  inputHeight?: number\n  suggestionsListMaxHeight?: number\n  initialValue?: string | { id: string } | AutocompleteDropdownItem\n  enableLoadingIndicator?: boolean\n  loading?: boolean\n  useFilter?: boolean\n  showClear?: boolean\n  showChevron?: boolean\n  closeOnBlur?: boolean\n  closeOnSubmit?: boolean\n  clearOnFocus?: boolean\n  caseSensitive?: boolean\n  ignoreAccents?: boolean\n  trimSearchText?: boolean\n  editable?: boolean\n  matchFrom?: 'any' | 'start'\n  debounce?: number\n  direction?: 'down' | 'up'\n  position?: 'absolute' | 'relative'\n  bottomOffset?: number\n  textInputProps?: TextInputProps\n  onChangeText?: (text: string) => void\n  onSelectItem?: (item: AutocompleteDropdownItem | null) => void\n  renderItem?: (item: AutocompleteDropdownItem, searchText: string) => React.ReactElement | null\n  onOpenSuggestionsList?: (isOpened: boolean) => void\n  onClear?: () => void\n  onChevronPress?: () => void\n  onRightIconComponentPress?: () => void\n  onSubmit?: TextInputProps['onSubmitEditing']\n  onBlur?: TextInputProps['onBlur']\n  onFocus?: TextInputProps['onFocus']\n  controller?:\n    | MutableRefObject<IAutocompleteDropdownRef | null>\n    | ((controller: IAutocompleteDropdownRef | null) => void)\n  containerStyle?: StyleProp<ViewStyle>\n  inputContainerStyle?: StyleProp<ViewStyle>\n  rightButtonsContainerStyle?: StyleProp<ViewStyle>\n  suggestionsListContainerStyle?: StyleProp<ViewStyle>\n  suggestionsListTextStyle?: StyleProp<TextStyle>\n  ChevronIconComponent?: React.ReactElement\n  RightIconComponent?: React.ReactElement\n  LeftComponent?: React.ReactElement\n  ClearIconComponent?: React.ReactElement\n  InputComponent?: React.ComponentType\n  ItemSeparatorComponent?: React.ComponentType<any> | null\n  EmptyResultComponent?: React.ReactElement\n  emptyResultText?: string\n  flatListProps?: Partial<FlatListProps<AutocompleteDropdownItem>>\n  ref?: React.LegacyRef<TextInput> | undefined\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}