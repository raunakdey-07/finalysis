{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"delayLongPress\", \"extraButtonProps\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport GenericTouchable from \"./GenericTouchable\";\nvar TouchableWithoutFeedback = React.forwardRef(function (_ref, ref) {\n  var _ref$delayLongPress = _ref.delayLongPress,\n    delayLongPress = _ref$delayLongPress === void 0 ? 600 : _ref$delayLongPress,\n    _ref$extraButtonProps = _ref.extraButtonProps,\n    extraButtonProps = _ref$extraButtonProps === void 0 ? {\n      rippleColor: 'transparent',\n      exclusive: true\n    } : _ref$extraButtonProps,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(GenericTouchable, _extends({\n    ref: ref,\n    delayLongPress: delayLongPress,\n    extraButtonProps: extraButtonProps\n  }, rest));\n});\nexport default TouchableWithoutFeedback;","map":{"version":3,"names":["React","GenericTouchable","TouchableWithoutFeedback","forwardRef","_ref","ref","_ref$delayLongPress","delayLongPress","_ref$extraButtonProps","extraButtonProps","rippleColor","exclusive","rest","_objectWithoutProperties","_excluded","createElement","_extends"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\touchables\\TouchableWithoutFeedback.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport GenericTouchable from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nexport type TouchableWithoutFeedbackProps = GenericTouchableProps;\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nconst TouchableWithoutFeedback = React.forwardRef<\n  GenericTouchable,\n  PropsWithChildren<TouchableWithoutFeedbackProps>\n>(\n  (\n    {\n      delayLongPress = 600,\n      extraButtonProps = {\n        rippleColor: 'transparent',\n        exclusive: true,\n      },\n      ...rest\n    },\n\n    ref\n  ) => (\n    <GenericTouchable\n      ref={ref}\n      delayLongPress={delayLongPress}\n      extraButtonProps={extraButtonProps}\n      {...rest}\n    />\n  )\n);\n\nexport default TouchableWithoutFeedback;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,gBAAP;AAWA,IAAMC,wBAAwB,GAAGF,KAAK,CAACG,UAAN,CAI/B,UAAAC,IAAA,EAUEC,GAVF;EAAA,IAAAC,mBAAA,GAAAF,IAAA,CAEIG,cAAc;IAAdA,cAAc,GAAAD,mBAAA,cAAG,GADnB,GAAAA,mBAAA;IAAAE,qBAAA,GAAAJ,IAAA,CAEEK,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG;MACjBE,WAAW,EAAE,aADI;MAEjBC,SAAS,EAAE;IAFM,CAFrB,GAAAH,qBAAA;IAMKI,IAAA,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAAA,OAKLd,KAAA,CAAAe,aAAA,CAACd,gBAAD,EAAAe,QAAA;IACEX,GAAG,EAAEA,GADP;IAEEE,cAAc,EAAEA,cAFlB;IAGEE,gBAAgB,EAAEA;EAHpB,GAIMG,IAJN,EAhB6B;AAAA,EAAjC;AAyBA,eAAeV,wBAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}