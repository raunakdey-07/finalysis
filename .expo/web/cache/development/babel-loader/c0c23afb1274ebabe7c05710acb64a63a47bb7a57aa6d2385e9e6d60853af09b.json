{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { memo, useEffect, useRef } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ChevronDown, XCircle } from 'react-native-feather';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RightButton = memo(function (_ref) {\n  var inputHeight = _ref.inputHeight,\n    onClearPress = _ref.onClearPress,\n    onChevronPress = _ref.onChevronPress,\n    isOpened = _ref.isOpened,\n    showChevron = _ref.showChevron,\n    showClear = _ref.showClear,\n    loading = _ref.loading,\n    enableLoadingIndicator = _ref.enableLoadingIndicator,\n    buttonsContainerStyle = _ref.buttonsContainerStyle,\n    ChevronIconComponent = _ref.ChevronIconComponent,\n    ClearIconComponent = _ref.ClearIconComponent,\n    RightIconComponent = _ref.RightIconComponent,\n    onRightIconComponentPress = _ref.onRightIconComponentPress;\n  var isOpenedAnimationValue = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.timing(isOpenedAnimationValue, {\n      duration: 350,\n      toValue: isOpened ? 1 : 0,\n      useNativeDriver: true,\n      easing: Easing.bezier(0.3, 0.58, 0.25, 0.99)\n    }).start();\n  }, [isOpened, isOpenedAnimationValue]);\n  var chevronSpin = isOpenedAnimationValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  return _jsxs(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      height: inputHeight\n    }, buttonsContainerStyle),\n    children: [(!enableLoadingIndicator || !loading) && showClear && _jsx(TouchableOpacity, {\n      onPress: onClearPress,\n      style: styles.clearButton,\n      children: ClearIconComponent != null ? ClearIconComponent : _jsx(XCircle, {\n        width: 18,\n        stroke: \"#aeb4c6\"\n      })\n    }), enableLoadingIndicator && loading && _jsx(ActivityIndicator, {\n      color: \"#999\"\n    }), RightIconComponent && _jsx(TouchableOpacity, {\n      onPress: onRightIconComponentPress,\n      style: styles.chevronButton,\n      children: RightIconComponent\n    }), showChevron && _jsx(Animated.View, {\n      style: {\n        transform: [{\n          rotate: chevronSpin\n        }]\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: onChevronPress,\n        style: styles.chevronButton,\n        children: ChevronIconComponent != null ? ChevronIconComponent : _jsx(ChevronDown, {\n          width: 20,\n          stroke: \"#727992\"\n        })\n      })\n    })]\n  });\n});\nvar styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    flex: 0,\n    flexDirection: 'row',\n    right: 8,\n    zIndex: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  clearButton: {\n    width: 26,\n    alignItems: 'center'\n  },\n  chevronButton: {\n    width: 26,\n    alignItems: 'center',\n    height: '100%',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","memo","useEffect","useRef","ActivityIndicator","Animated","Easing","StyleSheet","TouchableOpacity","View","ChevronDown","XCircle","jsx","_jsx","jsxs","_jsxs","RightButton","_ref","inputHeight","onClearPress","onChevronPress","isOpened","showChevron","showClear","loading","enableLoadingIndicator","buttonsContainerStyle","ChevronIconComponent","ClearIconComponent","RightIconComponent","onRightIconComponentPress","isOpenedAnimationValue","Value","current","timing","duration","toValue","useNativeDriver","easing","bezier","start","chevronSpin","interpolate","inputRange","outputRange","style","_objectSpread","styles","container","height","children","onPress","clearButton","width","stroke","color","chevronButton","transform","rotate","create","position","flex","flexDirection","right","zIndex","justifyContent","alignItems","backgroundColor"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-autocomplete-dropdown\\src\\RightButton.tsx"],"sourcesContent":["import React, { memo, useEffect, useRef } from 'react'\nimport type { StyleProp, ViewStyle } from 'react-native'\nimport { ActivityIndicator, Animated, Easing, StyleSheet, TouchableOpacity, View } from 'react-native'\nimport { ChevronDown, XCircle } from 'react-native-feather'\n\ninterface RightButtonProps {\n  inputHeight?: number\n  onClearPress?: () => void\n  onChevronPress?: () => void\n  isOpened?: boolean\n  showChevron?: boolean\n  showClear?: boolean\n  loading?: boolean\n  enableLoadingIndicator?: boolean\n  buttonsContainerStyle?: StyleProp<ViewStyle>\n  ChevronIconComponent?: React.ReactNode\n  ClearIconComponent?: React.ReactNode\n  RightIconComponent?: React.ReactNode\n  onRightIconComponentPress?: () => void\n}\n\nexport const RightButton: React.FC<RightButtonProps> = memo(\n  ({\n    inputHeight,\n    onClearPress,\n    onChevronPress,\n    isOpened,\n    showChevron,\n    showClear,\n    loading,\n    enableLoadingIndicator,\n    buttonsContainerStyle,\n    ChevronIconComponent,\n    ClearIconComponent,\n    RightIconComponent,\n    onRightIconComponentPress,\n  }) => {\n    const isOpenedAnimationValue = useRef(new Animated.Value(0)).current\n\n    useEffect(() => {\n      Animated.timing(isOpenedAnimationValue, {\n        duration: 350,\n        toValue: isOpened ? 1 : 0,\n        useNativeDriver: true,\n        easing: Easing.bezier(0.3, 0.58, 0.25, 0.99),\n      }).start()\n    }, [isOpened, isOpenedAnimationValue])\n\n    const chevronSpin = isOpenedAnimationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    })\n\n    return (\n      <View\n        style={{\n          ...styles.container,\n          height: inputHeight,\n          ...(buttonsContainerStyle as object),\n        }}>\n        {(!enableLoadingIndicator || !loading) && showClear && (\n          <TouchableOpacity onPress={onClearPress} style={styles.clearButton}>\n            {ClearIconComponent ?? <XCircle width={18} stroke=\"#aeb4c6\" />}\n          </TouchableOpacity>\n        )}\n        {enableLoadingIndicator && loading && <ActivityIndicator color=\"#999\" />}\n        {RightIconComponent && (\n          <TouchableOpacity onPress={onRightIconComponentPress} style={styles.chevronButton}>\n            {RightIconComponent}\n          </TouchableOpacity>\n        )}\n        {showChevron && (\n          <Animated.View style={{ transform: [{ rotate: chevronSpin }] }}>\n            <TouchableOpacity onPress={onChevronPress} style={styles.chevronButton}>\n              {ChevronIconComponent ?? <ChevronDown width={20} stroke=\"#727992\" />}\n            </TouchableOpacity>\n          </Animated.View>\n        )}\n      </View>\n    )\n  },\n)\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    flex: 0,\n    flexDirection: 'row',\n    right: 8,\n    zIndex: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  clearButton: {\n    width: 26,\n    alignItems: 'center',\n  },\n  chevronButton: {\n    width: 26,\n    alignItems: 'center',\n    height: '100%',\n    justifyContent: 'center',\n  },\n})\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA,OAAAC,iBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAGtD,SAASC,WAAW,EAAEC,OAAO,QAAQ,sBAAsB;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAkB3D,OAAO,IAAMC,WAAuC,GAAGf,IAAI,CACzD,UAAAgB,IAAA,EAcM;EAAA,IAbJC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IACZC,cAAc,GAAAH,IAAA,CAAdG,cAAc;IACdC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IACRC,WAAW,GAAAL,IAAA,CAAXK,WAAW;IACXC,SAAS,GAAAN,IAAA,CAATM,SAAS;IACTC,OAAO,GAAAP,IAAA,CAAPO,OAAO;IACPC,sBAAsB,GAAAR,IAAA,CAAtBQ,sBAAsB;IACtBC,qBAAqB,GAAAT,IAAA,CAArBS,qBAAqB;IACrBC,oBAAoB,GAAAV,IAAA,CAApBU,oBAAoB;IACpBC,kBAAkB,GAAAX,IAAA,CAAlBW,kBAAkB;IAClBC,kBAAkB,GAAAZ,IAAA,CAAlBY,kBAAkB;IAClBC,yBAAA,GAAAb,IAAA,CAAAa,yBAAA;EAEA,IAAMC,sBAAsB,GAAG5B,MAAM,CAAC,IAAIE,QAAQ,CAAC2B,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAEpE/B,SAAS,CAAC,YAAM;IACdG,QAAQ,CAAC6B,MAAM,CAACH,sBAAsB,EAAE;MACtCI,QAAQ,EAAE,GAAG;MACbC,OAAO,EAAEf,QAAQ,GAAG,CAAC,GAAG,CAAC;MACzBgB,eAAe,EAAE,IAAI;MACrBC,MAAM,EAAEhC,MAAM,CAACiC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC7C,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC,EAAE,CAACnB,QAAQ,EAAEU,sBAAsB,CAAC,CAAC;EAEtC,IAAMU,WAAW,GAAGV,sBAAsB,CAACW,WAAW,CAAC;IACrDC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAAC,MAAM,EAAE,QAAQ;EAChC,CAAC,CAAC;EAEF,OACE7B,KAAA,CAACN,IAAI;IACHoC,KAAK,EAAAC,aAAA,CAAAA,aAAA,KACAC,MAAM,CAACC,SAAS;MACnBC,MAAM,EAAE/B;IAAW,GACfQ,qBAAA,CACJ;IAAAwB,QAAA,GACD,CAAC,CAACzB,sBAAsB,IAAI,CAACD,OAAO,KAAKD,SAAS,IACjDV,IAAA,CAACL,gBAAgB;MAAC2C,OAAO,EAAEhC,YAAa;MAAC0B,KAAK,EAAEE,MAAM,CAACK,WAAY;MAAAF,QAAA,EAChEtB,kBAAkB,WAAlBA,kBAAkB,GAAIf,IAAA,CAACF,OAAO;QAAC0C,KAAK,EAAE,EAAG;QAACC,MAAM,EAAC;MAAS,CAAE;IAAC,CAC9C,CACnB,EACA7B,sBAAsB,IAAID,OAAO,IAAIX,IAAA,CAACT,iBAAiB;MAACmD,KAAK,EAAC;IAAM,CAAE,CAAC,EACvE1B,kBAAkB,IACjBhB,IAAA,CAACL,gBAAgB;MAAC2C,OAAO,EAAErB,yBAA0B;MAACe,KAAK,EAAEE,MAAM,CAACS,aAAc;MAAAN,QAAA,EAC/ErB;IAAkB,CACH,CACnB,EACAP,WAAW,IACVT,IAAA,CAACR,QAAQ,CAACI,IAAI;MAACoC,KAAK,EAAE;QAAEY,SAAS,EAAE,CAAC;UAAEC,MAAM,EAAEjB;QAAY,CAAC;MAAE,CAAE;MAAAS,QAAA,EAC7DrC,IAAA,CAACL,gBAAgB;QAAC2C,OAAO,EAAE/B,cAAe;QAACyB,KAAK,EAAEE,MAAM,CAACS,aAAc;QAAAN,QAAA,EACpEvB,oBAAoB,WAApBA,oBAAoB,GAAId,IAAA,CAACH,WAAW;UAAC2C,KAAK,EAAE,EAAG;UAACC,MAAM,EAAC;QAAS,CAAE;MAAC,CACpD;IAAC,CACN,CAChB;EAAA,CACG,CAAC;AAEX,CACF,CAAC;AAED,IAAMP,MAAM,GAAGxC,UAAU,CAACoD,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDf,WAAW,EAAE;IACXC,KAAK,EAAE,EAAE;IACTa,UAAU,EAAE;EACd,CAAC;EACDV,aAAa,EAAE;IACbH,KAAK,EAAE,EAAE;IACTa,UAAU,EAAE,QAAQ;IACpBjB,MAAM,EAAE,MAAM;IACdgB,cAAc,EAAE;EAClB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}