{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar InteractionManager = function () {\n  function InteractionManager() {\n    _classCallCheck(this, InteractionManager);\n    _defineProperty(this, \"waitForRelations\", new Map());\n    _defineProperty(this, \"simultaneousRelations\", new Map());\n    _defineProperty(this, \"blocksHandlersRelations\", new Map());\n  }\n  return _createClass(InteractionManager, [{\n    key: \"configureInteractions\",\n    value: function configureInteractions(handler, config) {\n      this.dropRelationsForHandlerWithTag(handler.handlerTag);\n      if (config.waitFor) {\n        var waitFor = [];\n        config.waitFor.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            waitFor.push(otherHandler);\n          } else {\n            waitFor.push(otherHandler.handlerTag);\n          }\n        });\n        this.waitForRelations.set(handler.handlerTag, waitFor);\n      }\n      if (config.simultaneousHandlers) {\n        var simultaneousHandlers = [];\n        config.simultaneousHandlers.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            simultaneousHandlers.push(otherHandler);\n          } else {\n            simultaneousHandlers.push(otherHandler.handlerTag);\n          }\n        });\n        this.simultaneousRelations.set(handler.handlerTag, simultaneousHandlers);\n      }\n      if (config.blocksHandlers) {\n        var blocksHandlers = [];\n        config.blocksHandlers.forEach(function (otherHandler) {\n          if (typeof otherHandler === 'number') {\n            blocksHandlers.push(otherHandler);\n          } else {\n            blocksHandlers.push(otherHandler.handlerTag);\n          }\n        });\n        this.blocksHandlersRelations.set(handler.handlerTag, blocksHandlers);\n      }\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler, otherHandler) {\n      var waitFor = this.waitForRelations.get(handler.handlerTag);\n      return (waitFor === null || waitFor === void 0 ? void 0 : waitFor.find(function (tag) {\n        return tag === otherHandler.handlerTag;\n      })) !== undefined;\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler, otherHandler) {\n      var simultaneousHandlers = this.simultaneousRelations.get(handler.handlerTag);\n      return (simultaneousHandlers === null || simultaneousHandlers === void 0 ? void 0 : simultaneousHandlers.find(function (tag) {\n        return tag === otherHandler.handlerTag;\n      })) !== undefined;\n    }\n  }, {\n    key: \"shouldRequireHandlerToWaitForFailure\",\n    value: function shouldRequireHandlerToWaitForFailure(handler, otherHandler) {\n      var waitFor = this.blocksHandlersRelations.get(handler.handlerTag);\n      return (waitFor === null || waitFor === void 0 ? void 0 : waitFor.find(function (tag) {\n        return tag === otherHandler.handlerTag;\n      })) !== undefined;\n    }\n  }, {\n    key: \"shouldHandlerBeCancelledBy\",\n    value: function shouldHandlerBeCancelledBy(_handler, otherHandler) {\n      var _otherHandler$isButto;\n      var isNativeHandler = otherHandler.constructor.name === 'NativeViewGestureHandler';\n      var isActive = otherHandler.active;\n      var isButton = ((_otherHandler$isButto = otherHandler.isButton) === null || _otherHandler$isButto === void 0 ? void 0 : _otherHandler$isButto.call(otherHandler)) === true;\n      return isNativeHandler && isActive && !isButton;\n    }\n  }, {\n    key: \"dropRelationsForHandlerWithTag\",\n    value: function dropRelationsForHandlerWithTag(handlerTag) {\n      this.waitForRelations.delete(handlerTag);\n      this.simultaneousRelations.delete(handlerTag);\n      this.blocksHandlersRelations.delete(handlerTag);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.waitForRelations.clear();\n      this.simultaneousRelations.clear();\n      this.blocksHandlersRelations.clear();\n    }\n  }], [{\n    key: \"instance\",\n    get: function get() {\n      if (!this._instance) {\n        this._instance = new InteractionManager();\n      }\n      return this._instance;\n    }\n  }]);\n}();\nexport { InteractionManager as default };\n_defineProperty(InteractionManager, \"_instance\", void 0);","map":{"version":3,"names":["InteractionManager","_classCallCheck","_defineProperty","Map","_createClass","key","value","configureInteractions","handler","config","dropRelationsForHandlerWithTag","handlerTag","waitFor","forEach","otherHandler","push","waitForRelations","set","simultaneousHandlers","simultaneousRelations","blocksHandlers","blocksHandlersRelations","shouldWaitForHandlerFailure","get","find","tag","undefined","shouldRecognizeSimultaneously","shouldRequireHandlerToWaitForFailure","shouldHandlerBeCancelledBy","_handler","_otherHandler$isButto","isNativeHandler","constructor","name","isActive","active","isButton","call","delete","reset","clear","_instance","default"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\InteractionManager.ts"],"sourcesContent":["import type IGestureHandler from '../handlers/IGestureHandler';\nimport { Config, Handler } from '../interfaces';\n\nexport default class InteractionManager {\n  private static _instance: InteractionManager;\n  private readonly waitForRelations: Map<number, number[]> = new Map();\n  private readonly simultaneousRelations: Map<number, number[]> = new Map();\n  private readonly blocksHandlersRelations: Map<number, number[]> = new Map();\n\n  // Private becaues of singleton\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public configureInteractions(handler: IGestureHandler, config: Config) {\n    this.dropRelationsForHandlerWithTag(handler.handlerTag);\n\n    if (config.waitFor) {\n      const waitFor: number[] = [];\n      config.waitFor.forEach((otherHandler: Handler): void => {\n        // New API reference\n        if (typeof otherHandler === 'number') {\n          waitFor.push(otherHandler);\n        } else {\n          // Old API reference\n          waitFor.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.waitForRelations.set(handler.handlerTag, waitFor);\n    }\n\n    if (config.simultaneousHandlers) {\n      const simultaneousHandlers: number[] = [];\n      config.simultaneousHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          simultaneousHandlers.push(otherHandler);\n        } else {\n          simultaneousHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.simultaneousRelations.set(handler.handlerTag, simultaneousHandlers);\n    }\n\n    if (config.blocksHandlers) {\n      const blocksHandlers: number[] = [];\n      config.blocksHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          blocksHandlers.push(otherHandler);\n        } else {\n          blocksHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.blocksHandlersRelations.set(handler.handlerTag, blocksHandlers);\n    }\n  }\n\n  public shouldWaitForHandlerFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.waitForRelations.get(\n      handler.handlerTag\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.handlerTag;\n      }) !== undefined\n    );\n  }\n\n  public shouldRecognizeSimultaneously(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const simultaneousHandlers: number[] | undefined =\n      this.simultaneousRelations.get(handler.handlerTag);\n\n    return (\n      simultaneousHandlers?.find((tag: number) => {\n        return tag === otherHandler.handlerTag;\n      }) !== undefined\n    );\n  }\n\n  public shouldRequireHandlerToWaitForFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.blocksHandlersRelations.get(\n      handler.handlerTag\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.handlerTag;\n      }) !== undefined\n    );\n  }\n\n  public shouldHandlerBeCancelledBy(\n    _handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    // We check constructor name instead of using `instanceof` in order do avoid circular dependencies\n    const isNativeHandler =\n      otherHandler.constructor.name === 'NativeViewGestureHandler';\n    const isActive = otherHandler.active;\n    const isButton = otherHandler.isButton?.() === true;\n\n    return isNativeHandler && isActive && !isButton;\n  }\n\n  public dropRelationsForHandlerWithTag(handlerTag: number): void {\n    this.waitForRelations.delete(handlerTag);\n    this.simultaneousRelations.delete(handlerTag);\n    this.blocksHandlersRelations.delete(handlerTag);\n  }\n\n  public reset() {\n    this.waitForRelations.clear();\n    this.simultaneousRelations.clear();\n    this.blocksHandlersRelations.clear();\n  }\n\n  public static get instance(): InteractionManager {\n    if (!this._instance) {\n      this._instance = new InteractionManager();\n    }\n\n    return this._instance;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}