{"ast":null,"code":"import { unregisterHandler } from \"../../handlersRegistry\";\nimport RNGestureHandlerModule from \"../../../RNGestureHandlerModule\";\nimport { scheduleFlushOperations } from \"../../utils\";\nimport { MountRegistry } from \"../../../mountRegistry\";\nexport function dropHandlers(preparedGesture) {\n  for (var handler of preparedGesture.attachedGestures) {\n    RNGestureHandlerModule.dropGestureHandler(handler.handlerTag);\n    unregisterHandler(handler.handlerTag, handler.config.testId);\n    MountRegistry.gestureWillUnmount(handler);\n  }\n  scheduleFlushOperations();\n}","map":{"version":3,"names":["unregisterHandler","RNGestureHandlerModule","scheduleFlushOperations","MountRegistry","dropHandlers","preparedGesture","handler","attachedGestures","dropGestureHandler","handlerTag","config","testId","gestureWillUnmount"],"sources":["C:\\Users\\rauna\\Project Finalysis\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\GestureDetector\\dropHandlers.ts"],"sourcesContent":["import { unregisterHandler } from '../../handlersRegistry';\nimport RNGestureHandlerModule from '../../../RNGestureHandlerModule';\nimport { scheduleFlushOperations } from '../../utils';\nimport { AttachedGestureState } from './types';\nimport { MountRegistry } from '../../../mountRegistry';\n\nexport function dropHandlers(preparedGesture: AttachedGestureState) {\n  for (const handler of preparedGesture.attachedGestures) {\n    RNGestureHandlerModule.dropGestureHandler(handler.handlerTag);\n\n    unregisterHandler(handler.handlerTag, handler.config.testId);\n\n    MountRegistry.gestureWillUnmount(handler);\n  }\n\n  scheduleFlushOperations();\n}\n"],"mappings":"AAAA,SAASA,iBAAT;AACA,OAAOC,sBAAP;AACA,SAASC,uBAAT;AAEA,SAASC,aAAT;AAEA,OAAO,SAASC,YAATA,CAAsBC,eAAtB,EAA6D;EAClE,KAAK,IAAMC,OAAX,IAAsBD,eAAe,CAACE,gBAAtC,EAAwD;IACtDN,sBAAsB,CAACO,kBAAvB,CAA0CF,OAAO,CAACG,UAAlD;IAEAT,iBAAiB,CAACM,OAAO,CAACG,UAAT,EAAqBH,OAAO,CAACI,MAAR,CAAeC,MAApC,CAAjB;IAEAR,aAAa,CAACS,kBAAd,CAAiCN,OAAjC;EACD;EAEDJ,uBAAuB;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}